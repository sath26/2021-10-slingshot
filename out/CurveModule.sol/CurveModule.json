{
  "abi": [
    {
      "inputs": [],
      "name": "slingshotPing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "curvePool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "iToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jToken",
          "type": "address"
        },
        {
          "internalType": "int128",
          "name": "i",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "j",
          "type": "int128"
        },
        {
          "internalType": "uint256",
          "name": "dx",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "tradeAll",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "underlyingTokens",
          "type": "bool"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610802806100206000396000f3fe6080604052600436106100295760003560e01c806390630a2c1461002e578063f9dc138614610043575b600080fd5b61004161003c366004610628565b610064565b005b34801561004f57600080fd5b50604080516001815290519081900360200190f35b81156100e4576040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b1580156100a957600080fd5b505afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e191906106e2565b92505b6100f86001600160a01b03881689856101f3565b8061017557604051630f7c084960e21b8152600f86810b600483015285900b602482015260448101849052600160648201526001600160a01b03891690633df0212490608401600060405180830381600087803b15801561015857600080fd5b505af115801561016c573d6000803e3d6000fd5b505050506101e9565b604051635320bf6b60e11b8152600f86810b600483015285900b602482015260448101849052600160648201526001600160a01b0389169063a6417ed690608401600060405180830381600087803b1580156101d057600080fd5b505af11580156101e4573d6000803e3d6000fd5b505050505b5050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561023e57600080fd5b505afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027691906106e2565b90508181101561029f5761029f8361028e8385610762565b6001600160a01b03871691906102a5565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156102f057600080fd5b505afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032891906106e2565b905061029f8463095ea7b360e01b85610341868661074a565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260006103e3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661046d9092919063ffffffff16565b905080516000148061040457508080602001905181019061040491906106be565b6104685760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b606061047c8484600085610484565b949350505050565b6060824710156104e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161045f565b600080866001600160a01b0316858760405161050191906106fb565b60006040518083038185875af1925050503d806000811461053e576040519150601f19603f3d011682016040523d82523d6000602084013e610543565b606091505b50915091506105548783838761055f565b979650505050505050565b606083156105cb5782516105c4576001600160a01b0385163b6105c45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045f565b508161047c565b61047c83838151156105e05781518083602001fd5b8060405162461bcd60e51b815260040161045f9190610717565b80356001600160a01b038116811461061157600080fd5b919050565b8035600f81900b811461061157600080fd5b600080600080600080600080610100898b03121561064557600080fd5b61064e896105fa565b975061065c60208a016105fa565b965061066a60408a016105fa565b955061067860608a01610616565b945061068660808a01610616565b935060a0890135925060c089013561069d816107bb565b915060e08901356106ad816107bb565b809150509295985092959890939650565b6000602082840312156106d057600080fd5b81516106db816107bb565b9392505050565b6000602082840312156106f457600080fd5b5051919050565b6000825161070d818460208701610779565b9190910192915050565b6020815260008251806020840152610736816040850160208701610779565b601f01601f19169190910160400192915050565b6000821982111561075d5761075d6107a5565b500190565b600082821015610774576107746107a5565b500390565b60005b8381101561079457818101518382015260200161077c565b8381111561029f5750506000910152565b634e487b7160e01b600052601160045260246000fd5b80151581146107c957600080fd5b5056fea264697066735822122064c5a6f372c01d7fe4f9e79f34efb4bdde0cea5f521ebe857cb8714ac97f238b64736f6c63430008070033",
    "sourceMap": "667:1112:11:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100295760003560e01c806390630a2c1461002e578063f9dc138614610043575b600080fd5b61004161003c366004610628565b610064565b005b34801561004f57600080fd5b50604080516001815290519081900360200190f35b81156100e4576040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b1580156100a957600080fd5b505afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e191906106e2565b92505b6100f86001600160a01b03881689856101f3565b8061017557604051630f7c084960e21b8152600f86810b600483015285900b602482015260448101849052600160648201526001600160a01b03891690633df0212490608401600060405180830381600087803b15801561015857600080fd5b505af115801561016c573d6000803e3d6000fd5b505050506101e9565b604051635320bf6b60e11b8152600f86810b600483015285900b602482015260448101849052600160648201526001600160a01b0389169063a6417ed690608401600060405180830381600087803b1580156101d057600080fd5b505af11580156101e4573d6000803e3d6000fd5b505050505b5050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561023e57600080fd5b505afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027691906106e2565b90508181101561029f5761029f8361028e8385610762565b6001600160a01b03871691906102a5565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156102f057600080fd5b505afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032891906106e2565b905061029f8463095ea7b360e01b85610341868661074a565b6040516001600160a01b039092166024830152604482015260640160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260006103e3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661046d9092919063ffffffff16565b905080516000148061040457508080602001905181019061040491906106be565b6104685760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b606061047c8484600085610484565b949350505050565b6060824710156104e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161045f565b600080866001600160a01b0316858760405161050191906106fb565b60006040518083038185875af1925050503d806000811461053e576040519150601f19603f3d011682016040523d82523d6000602084013e610543565b606091505b50915091506105548783838761055f565b979650505050505050565b606083156105cb5782516105c4576001600160a01b0385163b6105c45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045f565b508161047c565b61047c83838151156105e05781518083602001fd5b8060405162461bcd60e51b815260040161045f9190610717565b80356001600160a01b038116811461061157600080fd5b919050565b8035600f81900b811461061157600080fd5b600080600080600080600080610100898b03121561064557600080fd5b61064e896105fa565b975061065c60208a016105fa565b965061066a60408a016105fa565b955061067860608a01610616565b945061068660808a01610616565b935060a0890135925060c089013561069d816107bb565b915060e08901356106ad816107bb565b809150509295985092959890939650565b6000602082840312156106d057600080fd5b81516106db816107bb565b9392505050565b6000602082840312156106f457600080fd5b5051919050565b6000825161070d818460208701610779565b9190910192915050565b6020815260008251806020840152610736816040850160208701610779565b601f01601f19169190910160400192915050565b6000821982111561075d5761075d6107a5565b500190565b600082821015610774576107746107a5565b500390565b60005b8381101561079457818101518382015260200161077c565b8381111561029f5750506000910152565b634e487b7160e01b600052601160045260246000fd5b80151581146107c957600080fd5b5056fea264697066735822122064c5a6f372c01d7fe4f9e79f34efb4bdde0cea5f521ebe857cb8714ac97f238b64736f6c63430008070033",
    "sourceMap": "667:1112:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1229:548;;;;;;:::i;:::-;;:::i;:::-;;251:80:12;;;;;;;;;;-1:-1:-1;251:80:12;;;320:4;2833:41:32;;251:80:12;;;;;;2821:2:32;251:80:12;;;1229:548:11;1465:8;1461:83;;;1494:39;;-1:-1:-1;;;1494:39:11;;1527:4;1494:39;;;2043:51:32;-1:-1:-1;;;;;1494:24:11;;;;;2016:18:32;;1494:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1489:44;;1461:83;1554:44;-1:-1:-1;;;;;1554:29:11;;1584:9;1595:2;1554:29;:44::i;:::-;1609:16;:161;;1718:52;;-1:-1:-1;;;1718:52:11;;3141:2:32;3130:22;;;1718:52:11;;;3112:41:32;3189:22;;;3169:18;;;3162:50;3228:18;;;3221:34;;;1767:1:11;3271:18:32;;;3264:34;-1:-1:-1;;;;;1718:30:11;;;;;3084:19:32;;1718:52:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:161;;;1640:63;;-1:-1:-1;;;1640:63:11;;3141:2:32;3130:22;;;1640:63:11;;;3112:41:32;3189:22;;;3169:18;;;3162:50;3228:18;;;3221:34;;;1700:1:11;3271:18:32;;;3264:34;-1:-1:-1;;;;;1640:41:11;;;;;3084:19:32;;1640:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:161;1229:548;;;;;;;;:::o;467:1106:8:-;614:39;;-1:-1:-1;;;614:39:8;;638:4;614:39;;;2317:34:32;-1:-1:-1;;;;;2387:15:32;;;2367:18;;;2360:43;587:24:8;;614:15;;;;;;2252:18:32;;614:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;587:66;;687:6;668:16;:25;664:903;;;1493:63;1521:7;1530:25;1539:16;1530:6;:25;:::i;:::-;-1:-1:-1;;;;;1493:27:8;;;:63;:27;:63::i;:::-;577:996;467:1106;;;:::o;2582:280:22:-;2701:39;;-1:-1:-1;;;2701:39:22;;2725:4;2701:39;;;2317:34:32;-1:-1:-1;;;;;2387:15:32;;;2367:18;;;2360:43;2678:20:22;;2701:15;;;;;;2252:18:32;;2701:39:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2678:62;-1:-1:-1;2750:105:22;2770:5;-1:-1:-1;;;2824:7:22;2833:20;2848:5;2678:62;2833:20;:::i;:::-;2777:77;;-1:-1:-1;;;;;2606:32:32;;;2777:77:22;;;2588:51:32;2655:18;;;2648:34;2561:18;;2777:77:22;;;-1:-1:-1;;2777:77:22;;;;;;;;;;;;;;-1:-1:-1;;;;;2777:77:22;-1:-1:-1;;;;;;2777:77:22;;;;;;;;;;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:22;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:22;;4664:2:32;5720:111:22;;;4646:21:32;4703:2;4683:18;;;4676:30;4742:34;4722:18;;;4715:62;-1:-1:-1;;;4793:18:32;;;4786:40;4843:19;;5720:111:22;;;;;;;;;5266:572;5196:642;;:::o;4108:223:23:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:23:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:23;;3899:2:32;5354:81:23;;;3881:21:32;3938:2;3918:18;;;3911:30;3977:34;3957:18;;;3950:62;-1:-1:-1;;;4028:18:32;;;4021:36;4074:19;;5354:81:23;3697:402:32;5354:81:23;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:23;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:23:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:23;;;8113:60;;;;-1:-1:-1;;;8113:60:23;;4306:2:32;8113:60:23;;;4288:21:32;4345:2;4325:18;;;4318:30;4384:31;4364:18;;;4357:59;4433:18;;8113:60:23;4104:353:32;8113:60:23;-1:-1:-1;8208:10:23;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:23;;;;;;;;:::i;14:173:32:-;82:20;;-1:-1:-1;;;;;131:31:32;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:162::-;259:20;;319:2;308:21;;;298:32;;288:60;;344:1;341;334:12;359:815;473:6;481;489;497;505;513;521;529;582:3;570:9;561:7;557:23;553:33;550:53;;;599:1;596;589:12;550:53;622:29;641:9;622:29;:::i;:::-;612:39;;670:38;704:2;693:9;689:18;670:38;:::i;:::-;660:48;;727:38;761:2;750:9;746:18;727:38;:::i;:::-;717:48;;784:37;817:2;806:9;802:18;784:37;:::i;:::-;774:47;;840:38;873:3;862:9;858:19;840:38;:::i;:::-;830:48;;925:3;914:9;910:19;897:33;887:43;;980:3;969:9;965:19;952:33;994:28;1016:5;994:28;:::i;:::-;1041:5;-1:-1:-1;1098:3:32;1083:19;;1070:33;1112:30;1070:33;1112:30;:::i;:::-;1161:7;1151:17;;;359:815;;;;;;;;;;;:::o;1179:245::-;1246:6;1299:2;1287:9;1278:7;1274:23;1270:32;1267:52;;;1315:1;1312;1305:12;1267:52;1347:9;1341:16;1366:28;1388:5;1366:28;:::i;:::-;1413:5;1179:245;-1:-1:-1;;;1179:245:32:o;1429:184::-;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;-1:-1:-1;1591:16:32;;1429:184;-1:-1:-1;1429:184:32:o;1618:274::-;1747:3;1785:6;1779:13;1801:53;1847:6;1842:3;1835:4;1827:6;1823:17;1801:53;:::i;:::-;1870:16;;;;;1618:274;-1:-1:-1;;1618:274:32:o;3309:383::-;3458:2;3447:9;3440:21;3421:4;3490:6;3484:13;3533:6;3528:2;3517:9;3513:18;3506:34;3549:66;3608:6;3603:2;3592:9;3588:18;3583:2;3575:6;3571:15;3549:66;:::i;:::-;3676:2;3655:15;-1:-1:-1;;3651:29:32;3636:45;;;;3683:2;3632:54;;3309:383;-1:-1:-1;;3309:383:32:o;4873:128::-;4913:3;4944:1;4940:6;4937:1;4934:13;4931:39;;;4950:18;;:::i;:::-;-1:-1:-1;4986:9:32;;4873:128::o;5006:125::-;5046:4;5074:1;5071;5068:8;5065:34;;;5079:18;;:::i;:::-;-1:-1:-1;5116:9:32;;5006:125::o;5136:258::-;5208:1;5218:113;5232:6;5229:1;5226:13;5218:113;;;5308:11;;;5302:18;5289:11;;;5282:39;5254:2;5247:10;5218:113;;;5349:6;5346:1;5343:13;5340:48;;;-1:-1:-1;;5384:1:32;5366:16;;5359:27;5136:258::o;5399:127::-;5460:10;5455:3;5451:20;5448:1;5441:31;5491:4;5488:1;5481:15;5515:4;5512:1;5505:15;5531:118;5617:5;5610:13;5603:21;5596:5;5593:32;5583:60;;5639:1;5636;5629:12;5583:60;5531:118;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "slingshotPing()": "f9dc1386",
    "swap(address,address,address,int128,int128,uint256,bool,bool)": "90630a2c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"slingshotPing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"curvePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"iToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jToken\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"j\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"tradeAll\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"underlyingTokens\",\"type\":\"bool\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"In addition to tradeAll, the only unique logic in this contract calculates post-trade        balance because Curve's innovative design choice of not returning an output amount.\",\"kind\":\"dev\",\"methods\":{\"swap(address,address,address,int128,int128,uint256,bool,bool)\":{\"params\":{\"curvePool\":\"Pool address to trade on\",\"dx\":\"Amount of the token to sell\",\"i\":\"Index array of the token sold\",\"iToken\":\"Address of token sold\",\"j\":\"Index array of the token bought\",\"jToken\":\"Address of token bought\",\"tradeAll\":\"If true, it overrides dx with current token balance\",\"underlyingTokens\":\"If true, it trades on curve pool using exchange_underlying\"}}},\"title\":\"Slingshot Curve Module\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swap(address,address,address,int128,int128,uint256,bool,bool)\":{\"notice\":\"@dev\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/module/CurveModule.sol\":\"CurveModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/lib/LibERC20Token.sol\":{\"keccak256\":\"0x1c2622c58a7144fb69a6a6d98f705553eb258fdd9754888275600f65f4e5fb66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://324877c40ba2eb66050eec2ee41228b0e5370233f14c3512ceab31bc9209c856\",\"dweb:/ipfs/QmSPQLXTTnqyazVAq27Zszx2ToyQ9Da2DG3jdAUJ1UyrxY\"]},\"contracts/module/CurveModule.sol\":{\"keccak256\":\"0x08089bfc36db64497efc618cb0d9a735c09698dd53bb67664860cffb246711ff\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c692b8447218cdb5d7f9f2eec7b2219bbd89a0872c8fa9927c9fefac3577ce0\",\"dweb:/ipfs/QmRKXfRXkaat6QVuprx2pN6vi14sgJiuuoADY4ozFkFaVX\"]},\"contracts/module/ISlingshotModule.sol\":{\"keccak256\":\"0xc318f19c11ad8064ea42792cdd5452a3a0c27b8f0464959ee932a1aba013b741\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7676d2301e8f529f98d3f464083bb37657141b908ba9787a44d9c3bb25c0d2b5\",\"dweb:/ipfs/QmT8EmeycmMVDdY2L5VkyEYmKba3rpyWAHE5VSua1eguwL\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "slingshotPing",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "curvePool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "iToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "jToken",
              "type": "address"
            },
            {
              "internalType": "int128",
              "name": "i",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "j",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "dx",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "tradeAll",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "underlyingTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "swap(address,address,address,int128,int128,uint256,bool,bool)": {
            "params": {
              "curvePool": "Pool address to trade on",
              "dx": "Amount of the token to sell",
              "i": "Index array of the token sold",
              "iToken": "Address of token sold",
              "j": "Index array of the token bought",
              "jToken": "Address of token bought",
              "tradeAll": "If true, it overrides dx with current token balance",
              "underlyingTokens": "If true, it trades on curve pool using exchange_underlying"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "swap(address,address,address,int128,int128,uint256,bool,bool)": {
            "notice": "@dev"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@erc725/=node_modules/@erc725/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uniswap/=node_modules/@uniswap/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/module/CurveModule.sol": "CurveModule"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/lib/LibERC20Token.sol": {
        "keccak256": "0x1c2622c58a7144fb69a6a6d98f705553eb258fdd9754888275600f65f4e5fb66",
        "urls": [
          "bzz-raw://324877c40ba2eb66050eec2ee41228b0e5370233f14c3512ceab31bc9209c856",
          "dweb:/ipfs/QmSPQLXTTnqyazVAq27Zszx2ToyQ9Da2DG3jdAUJ1UyrxY"
        ],
        "license": "AGPLv3"
      },
      "contracts/module/CurveModule.sol": {
        "keccak256": "0x08089bfc36db64497efc618cb0d9a735c09698dd53bb67664860cffb246711ff",
        "urls": [
          "bzz-raw://6c692b8447218cdb5d7f9f2eec7b2219bbd89a0872c8fa9927c9fefac3577ce0",
          "dweb:/ipfs/QmRKXfRXkaat6QVuprx2pN6vi14sgJiuuoADY4ozFkFaVX"
        ],
        "license": "AGPLv3"
      },
      "contracts/module/ISlingshotModule.sol": {
        "keccak256": "0xc318f19c11ad8064ea42792cdd5452a3a0c27b8f0464959ee932a1aba013b741",
        "urls": [
          "bzz-raw://7676d2301e8f529f98d3f464083bb37657141b908ba9787a44d9c3bb25c0d2b5",
          "dweb:/ipfs/QmT8EmeycmMVDdY2L5VkyEYmKba3rpyWAHE5VSua1eguwL"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/module/CurveModule.sol",
    "id": 1519,
    "exportedSymbols": {
      "Address": [
        3039
      ],
      "CurveModule": [
        1518
      ],
      "ICurvePool": [
        1439
      ],
      "IERC20": [
        2297
      ],
      "IERC20Permit": [
        2333
      ],
      "ISlingshotModule": [
        1531
      ],
      "LibERC20Token": [
        1178
      ],
      "SafeERC20": [
        2709
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:1745:11",
    "nodes": [
      {
        "id": 1412,
        "nodeType": "PragmaDirective",
        "src": "35:22:11",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 1413,
        "nodeType": "PragmaDirective",
        "src": "58:19:11",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 1414,
        "nodeType": "ImportDirective",
        "src": "79:56:11",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1519,
        "sourceUnit": 2298,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1415,
        "nodeType": "ImportDirective",
        "src": "136:34:11",
        "nodes": [],
        "absolutePath": "contracts/lib/LibERC20Token.sol",
        "file": "../lib/LibERC20Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1519,
        "sourceUnit": 1179,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1416,
        "nodeType": "ImportDirective",
        "src": "171:32:11",
        "nodes": [],
        "absolutePath": "contracts/module/ISlingshotModule.sol",
        "file": "./ISlingshotModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1519,
        "sourceUnit": 1532,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1439,
        "nodeType": "ContractDefinition",
        "src": "205:234:11",
        "nodes": [
          {
            "id": 1427,
            "nodeType": "FunctionDefinition",
            "src": "232:75:11",
            "nodes": [],
            "functionSelector": "3df02124",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nameLocation": "241:8:11",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1418,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "257:1:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1427,
                  "src": "250:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1420,
                  "mutability": "mutable",
                  "name": "j",
                  "nameLocation": "267:1:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1427,
                  "src": "260:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "dx",
                  "nameLocation": "278:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1427,
                  "src": "270:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "mutability": "mutable",
                  "name": "min_dy",
                  "nameLocation": "290:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1427,
                  "src": "282:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "249:48:11"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:11"
            },
            "scope": 1439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1438,
            "nodeType": "FunctionDefinition",
            "src": "313:124:11",
            "nodes": [],
            "functionSelector": "a6417ed6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchange_underlying",
            "nameLocation": "322:19:11",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "358:1:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "351:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "j",
                  "nameLocation": "376:1:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "369:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "dx",
                  "nameLocation": "395:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "387:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "min_dy",
                  "nameLocation": "415:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "407:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "341:86:11"
            },
            "returnParameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:11"
            },
            "scope": 1439,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          1439
        ],
        "name": "ICurvePool",
        "nameLocation": "215:10:11",
        "scope": 1519,
        "usedErrors": []
      },
      {
        "id": 1518,
        "nodeType": "ContractDefinition",
        "src": "667:1112:11",
        "nodes": [
          {
            "id": 1446,
            "nodeType": "UsingForDirective",
            "src": "714:31:11",
            "nodes": [],
            "libraryName": {
              "id": 1443,
              "name": "LibERC20Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1178,
              "src": "720:13:11"
            },
            "typeName": {
              "id": 1445,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1444,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2297,
                "src": "738:6:11"
              },
              "referencedDeclaration": 2297,
              "src": "738:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2297",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1517,
            "nodeType": "FunctionDefinition",
            "src": "1229:548:11",
            "nodes": [],
            "body": {
              "id": 1516,
              "nodeType": "Block",
              "src": "1451:326:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1466,
                    "name": "tradeAll",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1461,
                    "src": "1465:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1480,
                  "nodeType": "IfStatement",
                  "src": "1461:83:11",
                  "trueBody": {
                    "id": 1479,
                    "nodeType": "Block",
                    "src": "1475:69:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1467,
                            "name": "dx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1459,
                            "src": "1489:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1474,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1527:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurveModule_$1518",
                                      "typeString": "contract CurveModule"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CurveModule_$1518",
                                      "typeString": "contract CurveModule"
                                    }
                                  ],
                                  "id": 1473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1519:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1472,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1519:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1519:13:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1469,
                                    "name": "iToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1451,
                                    "src": "1501:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1468,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2297,
                                  "src": "1494:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:14:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$2297",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2254,
                              "src": "1494:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1494:39:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1489:44:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1478,
                        "nodeType": "ExpressionStatement",
                        "src": "1489:44:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1485,
                        "name": "curvePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "1584:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1486,
                        "name": "dx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "1595:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1482,
                            "name": "iToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "1561:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1481,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2297,
                          "src": "1554:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1554:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2297",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveIfBelow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1177,
                      "src": "1554:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2297_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2297_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:44:11"
                },
                {
                  "expression": {
                    "condition": {
                      "id": 1489,
                      "name": "underlyingTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "1609:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 1506,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "1749:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        {
                          "id": 1507,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1457,
                          "src": "1752:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        {
                          "id": 1508,
                          "name": "dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1459,
                          "src": "1755:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1767:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1759:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1509,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1759:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1759:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          },
                          {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1503,
                              "name": "curvePool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "1729:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1502,
                            "name": "ICurvePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "1718:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICurvePool_$1439_$",
                              "typeString": "type(contract ICurvePool)"
                            }
                          },
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurvePool_$1439",
                            "typeString": "contract ICurvePool"
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchange",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1427,
                        "src": "1718:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (int128,int128,uint256,uint256) external"
                        }
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1718:52:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1609:161:11",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 1494,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "1682:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        {
                          "id": 1495,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1457,
                          "src": "1685:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        {
                          "id": 1496,
                          "name": "dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1459,
                          "src": "1688:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1700:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1692:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1497,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1692:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1692:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          },
                          {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1491,
                              "name": "curvePool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "1651:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1490,
                            "name": "ICurvePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "1640:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICurvePool_$1439_$",
                              "typeString": "type(contract ICurvePool)"
                            }
                          },
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1640:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurvePool_$1439",
                            "typeString": "contract ICurvePool"
                          }
                        },
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchange_underlying",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1438,
                        "src": "1640:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (int128,int128,uint256,uint256) external"
                        }
                      },
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1640:63:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:161:11"
                }
              ]
            },
            "documentation": {
              "id": 1447,
              "nodeType": "StructuredDocumentation",
              "src": "751:473:11",
              "text": "@notice\n @dev\n @param curvePool Pool address to trade on\n @param iToken Address of token sold\n @param jToken Address of token bought\n @param i Index array of the token sold\n @param j Index array of the token bought\n @param dx Amount of the token to sell\n @param tradeAll If true, it overrides dx with current token balance\n @param underlyingTokens If true, it trades on curve pool using exchange_underlying"
            },
            "functionSelector": "90630a2c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "1238:4:11",
            "parameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "curvePool",
                  "nameLocation": "1260:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1252:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "iToken",
                  "nameLocation": "1287:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1279:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "jToken",
                  "nameLocation": "1311:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1303:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1455,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "1334:1:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1327:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "j",
                  "nameLocation": "1352:1:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1345:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1459,
                  "mutability": "mutable",
                  "name": "dx",
                  "nameLocation": "1371:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1363:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "tradeAll",
                  "nameLocation": "1388:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1383:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "underlyingTokens",
                  "nameLocation": "1411:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "1406:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:191:11"
            },
            "returnParameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1451:0:11"
            },
            "scope": 1518,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1441,
              "name": "ISlingshotModule",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1531,
              "src": "691:16:11"
            },
            "id": 1442,
            "nodeType": "InheritanceSpecifier",
            "src": "691:16:11"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1440,
          "nodeType": "StructuredDocumentation",
          "src": "441:226:11",
          "text": "@title Slingshot Curve Module\n @dev   In addition to tradeAll, the only unique logic in this contract calculates post-trade\n        balance because Curve's innovative design choice of not returning an output amount."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1518,
          1531
        ],
        "name": "CurveModule",
        "nameLocation": "676:11:11",
        "scope": 1519,
        "usedErrors": []
      }
    ],
    "license": "AGPLv3"
  },
  "id": 11
}