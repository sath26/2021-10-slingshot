{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IBalancerVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IBalancerVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IBalancerVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountCalculated",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IBalancerVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IBalancerVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBalancerVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculated\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/module/BalancerV2ModuleMatic.sol\":\"IBalancerVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/lib/LibERC20Token.sol\":{\"keccak256\":\"0x1c2622c58a7144fb69a6a6d98f705553eb258fdd9754888275600f65f4e5fb66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://324877c40ba2eb66050eec2ee41228b0e5370233f14c3512ceab31bc9209c856\",\"dweb:/ipfs/QmSPQLXTTnqyazVAq27Zszx2ToyQ9Da2DG3jdAUJ1UyrxY\"]},\"contracts/module/BalancerV2ModuleMatic.sol\":{\"keccak256\":\"0xcffc6595b6110c9528d1a7e02cc4766e9566377fa8016fac67a342afce052408\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e408702442052f173ddb633d02a02ef3b4d57aae20ad16df54653e48f6974a0d\",\"dweb:/ipfs/QmYiaLLyWTxNUq2hUKcL8hJTiJ9KNKwtac757j9ETog58p\"]},\"contracts/module/ISlingshotModule.sol\":{\"keccak256\":\"0xc318f19c11ad8064ea42792cdd5452a3a0c27b8f0464959ee932a1aba013b741\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7676d2301e8f529f98d3f464083bb37657141b908ba9787a44d9c3bb25c0d2b5\",\"dweb:/ipfs/QmT8EmeycmMVDdY2L5VkyEYmKba3rpyWAHE5VSua1eguwL\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IBalancerVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IBalancerVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IBalancerVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountCalculated",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@erc725/=node_modules/@erc725/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uniswap/=node_modules/@uniswap/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/module/BalancerV2ModuleMatic.sol": "IBalancerVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/lib/LibERC20Token.sol": {
        "keccak256": "0x1c2622c58a7144fb69a6a6d98f705553eb258fdd9754888275600f65f4e5fb66",
        "urls": [
          "bzz-raw://324877c40ba2eb66050eec2ee41228b0e5370233f14c3512ceab31bc9209c856",
          "dweb:/ipfs/QmSPQLXTTnqyazVAq27Zszx2ToyQ9Da2DG3jdAUJ1UyrxY"
        ],
        "license": "AGPLv3"
      },
      "contracts/module/BalancerV2ModuleMatic.sol": {
        "keccak256": "0xcffc6595b6110c9528d1a7e02cc4766e9566377fa8016fac67a342afce052408",
        "urls": [
          "bzz-raw://e408702442052f173ddb633d02a02ef3b4d57aae20ad16df54653e48f6974a0d",
          "dweb:/ipfs/QmYiaLLyWTxNUq2hUKcL8hJTiJ9KNKwtac757j9ETog58p"
        ],
        "license": "AGPLv3"
      },
      "contracts/module/ISlingshotModule.sol": {
        "keccak256": "0xc318f19c11ad8064ea42792cdd5452a3a0c27b8f0464959ee932a1aba013b741",
        "urls": [
          "bzz-raw://7676d2301e8f529f98d3f464083bb37657141b908ba9787a44d9c3bb25c0d2b5",
          "dweb:/ipfs/QmT8EmeycmMVDdY2L5VkyEYmKba3rpyWAHE5VSua1eguwL"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/module/BalancerV2ModuleMatic.sol",
    "id": 1411,
    "exportedSymbols": {
      "Address": [
        3039
      ],
      "BalancerV2ModuleMatic": [
        1410
      ],
      "IBalancerVault": [
        1312
      ],
      "IERC20": [
        2297
      ],
      "IERC20Permit": [
        2333
      ],
      "ISlingshotModule": [
        1531
      ],
      "LibERC20Token": [
        1178
      ],
      "SafeERC20": [
        2709
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:1947:10",
    "nodes": [
      {
        "id": 1266,
        "nodeType": "PragmaDirective",
        "src": "35:22:10",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 1267,
        "nodeType": "PragmaDirective",
        "src": "58:19:10",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 1268,
        "nodeType": "ImportDirective",
        "src": "79:56:10",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1411,
        "sourceUnit": 2298,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1269,
        "nodeType": "ImportDirective",
        "src": "136:34:10",
        "nodes": [],
        "absolutePath": "contracts/lib/LibERC20Token.sol",
        "file": "../lib/LibERC20Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1411,
        "sourceUnit": 1179,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1270,
        "nodeType": "ImportDirective",
        "src": "171:32:10",
        "nodes": [],
        "absolutePath": "contracts/module/ISlingshotModule.sol",
        "file": "./ISlingshotModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1411,
        "sourceUnit": 1532,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1312,
        "nodeType": "ContractDefinition",
        "src": "205:671:10",
        "nodes": [
          {
            "id": 1273,
            "nodeType": "EnumDefinition",
            "src": "236:57:10",
            "nodes": [],
            "canonicalName": "IBalancerVault.SwapKind",
            "members": [
              {
                "id": 1271,
                "name": "GIVEN_IN",
                "nameLocation": "260:8:10",
                "nodeType": "EnumValue",
                "src": "260:8:10"
              },
              {
                "id": 1272,
                "name": "GIVEN_OUT",
                "nameLocation": "278:9:10",
                "nodeType": "EnumValue",
                "src": "278:9:10"
              }
            ],
            "name": "SwapKind",
            "nameLocation": "241:8:10"
          },
          {
            "id": 1287,
            "nodeType": "StructDefinition",
            "src": "299:213:10",
            "nodes": [],
            "canonicalName": "IBalancerVault.SingleSwap",
            "members": [
              {
                "constant": false,
                "id": 1275,
                "mutability": "mutable",
                "name": "poolId",
                "nameLocation": "335:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 1287,
                "src": "327:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1274,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1278,
                "mutability": "mutable",
                "name": "kind",
                "nameLocation": "360:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 1287,
                "src": "351:13:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_SwapKind_$1273",
                  "typeString": "enum IBalancerVault.SwapKind"
                },
                "typeName": {
                  "id": 1277,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1276,
                    "name": "SwapKind",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1273,
                    "src": "351:8:10"
                  },
                  "referencedDeclaration": 1273,
                  "src": "351:8:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SwapKind_$1273",
                    "typeString": "enum IBalancerVault.SwapKind"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1280,
                "mutability": "mutable",
                "name": "assetIn",
                "nameLocation": "382:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 1287,
                "src": "374:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1279,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1282,
                "mutability": "mutable",
                "name": "assetOut",
                "nameLocation": "428:8:10",
                "nodeType": "VariableDeclaration",
                "scope": 1287,
                "src": "420:16:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1281,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "420:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1284,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "475:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 1287,
                "src": "467:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1283,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "467:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1286,
                "mutability": "mutable",
                "name": "userData",
                "nameLocation": "497:8:10",
                "nodeType": "VariableDeclaration",
                "scope": 1287,
                "src": "491:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 1285,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "491:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SingleSwap",
            "nameLocation": "306:10:10",
            "scope": 1312,
            "visibility": "public"
          },
          {
            "id": 1296,
            "nodeType": "StructDefinition",
            "src": "518:154:10",
            "nodes": [],
            "canonicalName": "IBalancerVault.FundManagement",
            "members": [
              {
                "constant": false,
                "id": 1289,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "558:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 1296,
                "src": "550:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1288,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1291,
                "mutability": "mutable",
                "name": "fromInternalBalance",
                "nameLocation": "579:19:10",
                "nodeType": "VariableDeclaration",
                "scope": 1296,
                "src": "574:24:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1290,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "574:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1293,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "624:9:10",
                "nodeType": "VariableDeclaration",
                "scope": 1296,
                "src": "608:25:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1292,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "608:15:10",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1295,
                "mutability": "mutable",
                "name": "toInternalBalance",
                "nameLocation": "648:17:10",
                "nodeType": "VariableDeclaration",
                "scope": 1296,
                "src": "643:22:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1294,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "643:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FundManagement",
            "nameLocation": "525:14:10",
            "scope": 1312,
            "visibility": "public"
          },
          {
            "id": 1311,
            "nodeType": "FunctionDefinition",
            "src": "678:196:10",
            "nodes": [],
            "functionSelector": "52bbbe29",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "687:4:10",
            "parameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "singleSwap",
                  "nameLocation": "719:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "701:28:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleSwap_$1287_memory_ptr",
                    "typeString": "struct IBalancerVault.SingleSwap"
                  },
                  "typeName": {
                    "id": 1298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1297,
                      "name": "SingleSwap",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1287,
                      "src": "701:10:10"
                    },
                    "referencedDeclaration": 1287,
                    "src": "701:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleSwap_$1287_storage_ptr",
                      "typeString": "struct IBalancerVault.SingleSwap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "funds",
                  "nameLocation": "761:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "739:27:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FundManagement_$1296_memory_ptr",
                    "typeString": "struct IBalancerVault.FundManagement"
                  },
                  "typeName": {
                    "id": 1301,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1300,
                      "name": "FundManagement",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1296,
                      "src": "739:14:10"
                    },
                    "referencedDeclaration": 1296,
                    "src": "739:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundManagement_$1296_storage_ptr",
                      "typeString": "struct IBalancerVault.FundManagement"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "limit",
                  "nameLocation": "784:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "776:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "807:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "799:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:130:10"
            },
            "returnParameters": {
              "id": 1310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "amountCalculated",
                  "nameLocation": "856:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "848:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:26:10"
            },
            "scope": 1312,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          1312
        ],
        "name": "IBalancerVault",
        "nameLocation": "215:14:10",
        "scope": 1411,
        "usedErrors": []
      },
      {
        "id": 1410,
        "nodeType": "ContractDefinition",
        "src": "915:1066:10",
        "nodes": [
          {
            "id": 1319,
            "nodeType": "UsingForDirective",
            "src": "972:31:10",
            "nodes": [],
            "libraryName": {
              "id": 1316,
              "name": "LibERC20Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1178,
              "src": "978:13:10"
            },
            "typeName": {
              "id": 1318,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1317,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2297,
                "src": "996:6:10"
              },
              "referencedDeclaration": 2297,
              "src": "996:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2297",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1322,
            "nodeType": "VariableDeclaration",
            "src": "1009:74:10",
            "nodes": [],
            "constant": true,
            "functionSelector": "fbfa77cf",
            "mutability": "constant",
            "name": "vault",
            "nameLocation": "1033:5:10",
            "scope": 1410,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1320,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842413132323232323232323238643842613434353935386137356130373034643536364246324338",
              "id": 1321,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1041:42:10",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xBA12222222228d8Ba445958a75a0704d566BF2C8"
            },
            "visibility": "public"
          },
          {
            "id": 1409,
            "nodeType": "FunctionDefinition",
            "src": "1090:889:10",
            "nodes": [],
            "body": {
              "id": 1408,
              "nodeType": "Block",
              "src": "1256:723:10",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1335,
                    "name": "tradeAll",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1332,
                    "src": "1270:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1349,
                  "nodeType": "IfStatement",
                  "src": "1266:95:10",
                  "trueBody": {
                    "id": 1348,
                    "nodeType": "Block",
                    "src": "1280:81:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1336,
                            "name": "totalAmountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "1294:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1343,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1344:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BalancerV2ModuleMatic_$1410",
                                      "typeString": "contract BalancerV2ModuleMatic"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BalancerV2ModuleMatic_$1410",
                                      "typeString": "contract BalancerV2ModuleMatic"
                                    }
                                  ],
                                  "id": 1342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1336:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1341,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1336:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1336:13:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1338,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1326,
                                    "src": "1317:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1337,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2297,
                                  "src": "1310:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1310:15:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$2297",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2254,
                              "src": "1310:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1310:40:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1294:56:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1347,
                        "nodeType": "ExpressionStatement",
                        "src": "1294:56:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1354,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "1402:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1355,
                        "name": "totalAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "1409:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1351,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "1378:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1350,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2297,
                          "src": "1371:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1371:15:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2297",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveIfBelow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1177,
                      "src": "1371:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2297_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2297_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:52:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "1371:52:10"
                },
                {
                  "assignments": [
                    1362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1362,
                      "mutability": "mutable",
                      "name": "singleSwap",
                      "nameLocation": "1467:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1408,
                      "src": "1434:43:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SingleSwap_$1287_memory_ptr",
                        "typeString": "struct IBalancerVault.SingleSwap"
                      },
                      "typeName": {
                        "id": 1361,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1360,
                          "name": "IBalancerVault.SingleSwap",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1287,
                          "src": "1434:25:10"
                        },
                        "referencedDeclaration": 1287,
                        "src": "1434:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleSwap_$1287_storage_ptr",
                          "typeString": "struct IBalancerVault.SingleSwap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1365,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "1519:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1366,
                            "name": "IBalancerVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1312,
                            "src": "1539:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBalancerVault_$1312_$",
                              "typeString": "type(contract IBalancerVault)"
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "SwapKind",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1273,
                          "src": "1539:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_SwapKind_$1273_$",
                            "typeString": "type(enum IBalancerVault.SwapKind)"
                          }
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GIVEN_IN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1271,
                        "src": "1539:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$1273",
                          "typeString": "enum IBalancerVault.SwapKind"
                        }
                      },
                      {
                        "id": 1369,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1326,
                        "src": "1585:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1370,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1328,
                        "src": "1606:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1371,
                        "name": "totalAmountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "1628:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_SwapKind_$1273",
                          "typeString": "enum IBalancerVault.SwapKind"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 1363,
                        "name": "IBalancerVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "1480:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBalancerVault_$1312_$",
                          "typeString": "type(contract IBalancerVault)"
                        }
                      },
                      "id": 1364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SingleSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1287,
                      "src": "1480:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SingleSwap_$1287_storage_ptr_$",
                        "typeString": "type(struct IBalancerVault.SingleSwap storage pointer)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:187:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleSwap_$1287_memory_ptr",
                      "typeString": "struct IBalancerVault.SingleSwap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1434:233:10"
                },
                {
                  "assignments": [
                    1379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1379,
                      "mutability": "mutable",
                      "name": "funds",
                      "nameLocation": "1715:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1408,
                      "src": "1678:42:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundManagement_$1296_memory_ptr",
                        "typeString": "struct IBalancerVault.FundManagement"
                      },
                      "typeName": {
                        "id": 1378,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1377,
                          "name": "IBalancerVault.FundManagement",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1296,
                          "src": "1678:29:10"
                        },
                        "referencedDeclaration": 1296,
                        "src": "1678:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$1296_storage_ptr",
                          "typeString": "struct IBalancerVault.FundManagement"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1396,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1384,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1791:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BalancerV2ModuleMatic_$1410",
                              "typeString": "contract BalancerV2ModuleMatic"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BalancerV2ModuleMatic_$1410",
                              "typeString": "contract BalancerV2ModuleMatic"
                            }
                          ],
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1783:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1382,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1783:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1783:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1814:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1391,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1853:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BalancerV2ModuleMatic_$1410",
                                  "typeString": "contract BalancerV2ModuleMatic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BalancerV2ModuleMatic_$1410",
                                  "typeString": "contract BalancerV2ModuleMatic"
                                }
                              ],
                              "id": 1390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1845:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1389,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1845:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1845:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1837:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1837:8:10",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1837:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1877:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1380,
                        "name": "IBalancerVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "1723:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBalancerVault_$1312_$",
                          "typeString": "type(contract IBalancerVault)"
                        }
                      },
                      "id": 1381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "FundManagement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1723:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_FundManagement_$1296_storage_ptr_$",
                        "typeString": "type(struct IBalancerVault.FundManagement storage pointer)"
                      }
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:173:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundManagement_$1296_memory_ptr",
                      "typeString": "struct IBalancerVault.FundManagement memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1678:218:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1401,
                        "name": "singleSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "1934:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleSwap_$1287_memory_ptr",
                          "typeString": "struct IBalancerVault.SingleSwap memory"
                        }
                      },
                      {
                        "id": 1402,
                        "name": "funds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1379,
                        "src": "1946:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$1296_memory_ptr",
                          "typeString": "struct IBalancerVault.FundManagement memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1953:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 1404,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1956:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1956:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleSwap_$1287_memory_ptr",
                          "typeString": "struct IBalancerVault.SingleSwap memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_FundManagement_$1296_memory_ptr",
                          "typeString": "struct IBalancerVault.FundManagement memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1398,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1322,
                            "src": "1922:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1397,
                          "name": "IBalancerVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1312,
                          "src": "1907:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBalancerVault_$1312_$",
                            "typeString": "type(contract IBalancerVault)"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1907:21:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerVault_$1312",
                          "typeString": "contract IBalancerVault"
                        }
                      },
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1311,
                      "src": "1907:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SingleSwap_$1287_memory_ptr_$_t_struct$_FundManagement_$1296_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct IBalancerVault.SingleSwap memory,struct IBalancerVault.FundManagement memory,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1407,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:65:10"
                }
              ]
            },
            "functionSelector": "a7cee829",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "1099:4:10",
            "parameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1121:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "1113:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "1145:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "1137:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1328,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "1170:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "1162:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1330,
                  "mutability": "mutable",
                  "name": "totalAmountIn",
                  "nameLocation": "1196:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "1188:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1332,
                  "mutability": "mutable",
                  "name": "tradeAll",
                  "nameLocation": "1224:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "1219:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:135:10"
            },
            "returnParameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:0:10"
            },
            "scope": 1410,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1314,
              "name": "ISlingshotModule",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1531,
              "src": "949:16:10"
            },
            "id": 1315,
            "nodeType": "InheritanceSpecifier",
            "src": "949:16:10"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1313,
          "nodeType": "StructuredDocumentation",
          "src": "878:37:10",
          "text": "@title Slingshot Balancer Module"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1410,
          1531
        ],
        "name": "BalancerV2ModuleMatic",
        "nameLocation": "924:21:10",
        "scope": 1411,
        "usedErrors": []
      }
    ],
    "license": "AGPLv3"
  },
  "id": 10
}