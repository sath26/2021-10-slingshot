{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wrappedNativeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldApprovalHandler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "approvalHandler",
          "type": "address"
        }
      ],
      "name": "NewApprovalHandler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldRegistry",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newRegistry",
          "type": "address"
        }
      ],
      "name": "NewModuleRegistry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SLINGSHOT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str1",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "str2",
          "type": "string"
        }
      ],
      "name": "appendString",
      "outputs": [
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str1",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "appendUint",
      "outputs": [
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approvalHandler",
      "outputs": [
        {
          "internalType": "contract ApprovalHandler",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedCalldata",
              "type": "bytes"
            }
          ],
          "internalType": "struct SlingshotI.TradeFormat[]",
          "name": "trades",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "finalAmountMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "depricated",
          "type": "address"
        }
      ],
      "name": "executeTrades",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executioner",
      "outputs": [
        {
          "internalType": "contract Executioner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleRegistry",
      "outputs": [
        {
          "internalType": "contract ModuleRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "prependNumber",
      "outputs": [
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueTokensFromExecutioner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approvalHandler",
          "type": "address"
        }
      ],
      "name": "setApprovalHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_moduleRegistry",
          "type": "address"
        }
      ],
      "name": "setModuleRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeToken",
      "outputs": [
        {
          "internalType": "contract IWrappedNATIVE",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620032d7380380620032d7833981016040819052620000349162000219565b60018055604051829082906200004a90620001ee565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200007e573d6000803e3d6000fd5b5060601b6001600160601b03191660c0526200009a83620000ba565b6001600160601b0319606092831b8116608052911b1660a0525062000263565b620000d5600080516020620032b783398151915280620000f3565b620000f0600080516020620032b7833981519152826200013e565b50565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6200014a82826200014e565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200014a576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001aa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61113f806200217883390190565b80516001600160a01b03811681146200021457600080fd5b919050565b6000806000606084860312156200022f57600080fd5b6200023a84620001fc565b92506200024a60208501620001fc565b91506200025a60408501620001fc565b90509250925092565b60805160601c60a05160601c60c05160601c611e7a620002fe600039600081816103e2015281816106a90152818161085b01528181610bb401528181610e1401528181610e4f0152818161100301526110540152600081816101b60152818161075301528181610f610152610fdf0152600081816104160152818161071601528181610c5801528181610dd00152610ed80152611e7a6000f3fe60806040526004361061012e5760003560e01c806382a5be33116100ab578063c35085fb1161006f578063c35085fb14610370578063cea9d26f14610390578063d547741f146103b0578063dc6ab02f146103d0578063e1758bd814610404578063e6c68d9c1461043857600080fd5b806382a5be33146102db57806391d14854146102fb57806397516dba1461031b578063a217fddf1461033b578063b95459e41461035057600080fd5b80632922a751116100f25780632922a7511461022e5780632f2ff15d1461024e578063314899071461026e57806336568abe1461029b57806343ec1d28146102bb57600080fd5b806301ffc9a71461013a57806306e757221461016f5780630ff4dc861461018457806317fcb39b146101a4578063248a9ca3146101f057600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a6101553660046119dd565b61045a565b60405190151581526020015b60405180910390f35b61018261017d3660046118bb565b610491565b005b34801561019057600080fd5b5061018261019f366004611864565b6108fe565b3480156101b057600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610166565b3480156101fc57600080fd5b5061022061020b366004611998565b60009081526020819052604090206001015490565b604051908152602001610166565b34801561023a57600080fd5b506003546101d8906001600160a01b031681565b34801561025a57600080fd5b506101826102693660046119b1565b61099b565b34801561027a57600080fd5b5061028e610289366004611a6b565b6109c5565b6040516101669190611ca8565b3480156102a757600080fd5b506101826102b63660046119b1565b6109f9565b3480156102c757600080fd5b506101826102d6366004611864565b610a77565b3480156102e757600080fd5b5061028e6102f6366004611ac9565b610b0c565b34801561030757600080fd5b5061015a6103163660046119b1565b610b29565b34801561032757600080fd5b5061018261033636600461187f565b610b52565b34801561034757600080fd5b50610220600081565b34801561035c57600080fd5b506002546101d8906001600160a01b031681565b34801561037c57600080fd5b5061028e61038b366004611a07565b610c0d565b34801561039c57600080fd5b506101826103ab36600461187f565b610c22565b3480156103bc57600080fd5b506101826103cb3660046119b1565b610d4d565b3480156103dc57600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b34801561041057600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b34801561044457600080fd5b50610220600080516020611e2583398151915281565b60006001600160e01b03198216637965db0b60e01b148061048b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b610499610d72565b600082116104ff5760405162461bcd60e51b815260206004820152602860248201527f536c696e6773686f743a2066696e616c416d6f756e744d696e2063616e6e6f74604482015267206265207a65726f60c01b60648201526084015b60405180910390fd5b826105565760405162461bcd60e51b815260206004820152602160248201527f536c696e6773686f743a207472616465732063616e6e6f7420626520656d70746044820152607960f81b60648201526084016104f6565b60005b83811015610679576002546001600160a01b03166342f6e38986868481811061058457610584611df8565b90506020028101906105969190611d20565b6105a4906020810190611864565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156105e357600080fd5b505afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611976565b6106675760405162461bcd60e51b815260206004820152601760248201527f536c696e6773686f743a206e6f742061206d6f64756c6500000000000000000060448201526064016104f6565b8061067181611dc7565b915050610559565b50600061068587610dcc565b9050610692883388610ed6565b60405163c62bd31d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c62bd31d906106e09088908890600401611bc6565b600060405180830381600087803b1580156106fa57600080fd5b505af115801561070e573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316886001600160a01b0316141561077e576107777f0000000000000000000000000000000000000000000000000000000000000000610dcc565b905061078a565b61078788610dcc565b90505b60006107968383611d6d565b9050848110156107fd5760405162461bcd60e51b815260206004820152602c60248201527f536c696e6773686f743a20726573756c74206973206c6f776572207468616e2060448201526b3932b8bab4b932b21036b4b760a11b60648201526084016104f6565b604080516001600160a01b038c811682528b1660208201528082018a905260608101839052905133917f899a8968d68f840cf01fdaf129bf72e96ca51b8ecad8c4f7566938e7a2ba6bcf919081900360800190a26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e0ca14748a336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401600060405180830381600087803b1580156108d157600080fd5b505af11580156108e5573d6000803e3d6000fd5b505050505050506108f560018055565b50505050505050565b610916600080516020611e2583398151915233610b29565b6109325760405162461bcd60e51b81526004016104f690611cdb565b600354604080516001600160a01b03928316815291831660208301527f239f6ee0f4464abee0bf30a68656d0148b186652f60e06b262b21de5becd2634910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152602081905260409020600101546109b681611093565b6109c083836110a0565b505050565b6060826109d183611124565b6040516020016109e2929190611b22565b604051602081830303815290604052905092915050565b6001600160a01b0381163314610a695760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104f6565b610a7382826111c1565b5050565b610a8f600080516020611e2583398151915233610b29565b610aab5760405162461bcd60e51b81526004016104f690611cdb565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f318d2d1842c685cc3f443bcf18cbd2360ded5f5e0f803d558d2d92a5560e37ed910160405180910390a15050565b6060610b1783611124565b826040516020016109e2929190611b22565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610b6a600080516020611e2583398151915233610b29565b610b865760405162461bcd60e51b81526004016104f690611cdb565b60405163cea9d26f60e01b81526001600160a01b0384811660048301528381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063cea9d26f906064015b600060405180830381600087803b158015610bf957600080fd5b505af11580156108f5573d6000803e3d6000fd5b606082826040516020016109e2929190611b22565b610c3a600080516020611e2583398151915233610b29565b610c565760405162461bcd60e51b81526004016104f690611cdb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610d39576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610cdd576040519150601f19603f3d011682016040523d82523d6000602084013e610ce2565b606091505b5050905080610d335760405162461bcd60e51b815260206004820152601d60248201527f536c696e6773686f743a2045544820726573637565206661696c65642e00000060448201526064016104f6565b50505050565b6109c06001600160a01b0384168383611226565b600082815260208190526040902060010154610d6881611093565b6109c083836111c1565b60026001541415610dc55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f6565b6002600155565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610e385750506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163190565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528316906370a082319060240160206040518083038186803b158015610e9957600080fd5b505afa158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190611ab0565b919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561102a57803414610f5f5760405162461bcd60e51b815260206004820152601e60248201527f536c696e6773686f743a20696e636f7272656374204554482076616c7565000060448201526064016104f6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610fba57600080fd5b505af1158015610fce573d6000803e3d6000fd5b506109c09350506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691507f0000000000000000000000000000000000000000000000000000000000000000905083611226565b600354604051630aed65f560e11b81526001600160a01b03858116600483015284811660248301527f00000000000000000000000000000000000000000000000000000000000000008116604483015260648201849052909116906315dacbea90608401610bdf565b61109d8133611278565b50565b6110aa8282610b29565b610a73576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556110e03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60606000611131836112d1565b600101905060008167ffffffffffffffff81111561115157611151611e0e565b6040519080825280601f01601f19166020018201604052801561117b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111b4576111b9565b611185565b509392505050565b6111cb8282610b29565b15610a73576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109c09084906113a9565b6112828282610b29565b610a735761128f8161147e565b61129a836020611490565b6040516020016112ab929190611b51565b60408051601f198184030181529082905262461bcd60e51b82526104f691600401611ca8565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113105772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061133c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061135a57662386f26fc10000830492506010015b6305f5e1008310611372576305f5e100830492506008015b612710831061138657612710830492506004015b60648310611398576064830492506002015b600a831061048b5760010192915050565b60006113fe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116339092919063ffffffff16565b905080516000148061141f57508080602001905181019061141f9190611976565b6109c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f6565b606061048b6001600160a01b03831660145b6060600061149f836002611d4e565b6114aa906002611d36565b67ffffffffffffffff8111156114c2576114c2611e0e565b6040519080825280601f01601f1916602001820160405280156114ec576020820181803683370190505b509050600360fc1b8160008151811061150757611507611df8565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061153657611536611df8565b60200101906001600160f81b031916908160001a905350600061155a846002611d4e565b611565906001611d36565b90505b60018111156115dd576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159957611599611df8565b1a60f81b8282815181106115af576115af611df8565b60200101906001600160f81b031916908160001a90535060049490941c936115d681611db0565b9050611568565b50831561162c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104f6565b9392505050565b6060611642848460008561164a565b949350505050565b6060824710156116ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f6565b600080866001600160a01b031685876040516116c79190611b06565b60006040518083038185875af1925050503d8060008114611704576040519150601f19603f3d011682016040523d82523d6000602084013e611709565b606091505b509150915061171a87838387611725565b979650505050505050565b6060831561179157825161178a576001600160a01b0385163b61178a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f6565b5081611642565b61164283838151156117a65781518083602001fd5b8060405162461bcd60e51b81526004016104f69190611ca8565b80356001600160a01b0381168114610ed157600080fd5b600082601f8301126117e857600080fd5b813567ffffffffffffffff8082111561180357611803611e0e565b604051601f8301601f19908116603f0116810190828211818310171561182b5761182b611e0e565b8160405283815286602085880101111561184457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561187657600080fd5b61162c826117c0565b60008060006060848603121561189457600080fd5b61189d846117c0565b92506118ab602085016117c0565b9150604084013590509250925092565b600080600080600080600060c0888a0312156118d657600080fd5b6118df886117c0565b96506118ed602089016117c0565b955060408801359450606088013567ffffffffffffffff8082111561191157600080fd5b818a0191508a601f83011261192557600080fd5b81358181111561193457600080fd5b8b60208260051b850101111561194957600080fd5b6020830196508095505050506080880135915061196860a089016117c0565b905092959891949750929550565b60006020828403121561198857600080fd5b8151801515811461162c57600080fd5b6000602082840312156119aa57600080fd5b5035919050565b600080604083850312156119c457600080fd5b823591506119d4602084016117c0565b90509250929050565b6000602082840312156119ef57600080fd5b81356001600160e01b03198116811461162c57600080fd5b60008060408385031215611a1a57600080fd5b823567ffffffffffffffff80821115611a3257600080fd5b611a3e868387016117d7565b93506020850135915080821115611a5457600080fd5b50611a61858286016117d7565b9150509250929050565b60008060408385031215611a7e57600080fd5b823567ffffffffffffffff811115611a9557600080fd5b611aa1858286016117d7565b95602094909401359450505050565b600060208284031215611ac257600080fd5b5051919050565b60008060408385031215611adc57600080fd5b82359150602083013567ffffffffffffffff811115611afa57600080fd5b611a61858286016117d7565b60008251611b18818460208701611d84565b9190910192915050565b60008351611b34818460208801611d84565b835190830190611b48818360208801611d84565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b89816017850160208801611d84565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611bba816028840160208801611d84565b01602801949350505050565b60208082528181018390526000906040808401600586901b8501820187855b88811015611c9a57878303603f190184528135368b9003603e19018112611c0b57600080fd5b8a016001600160a01b03611c1e826117c0565b16845286810135601e19823603018112611c3757600080fd5b8101803567ffffffffffffffff811115611c5057600080fd5b803603831315611c5f57600080fd5b87898701528088870152606092508089830184880137600086820184015295880195601f01601f191690940101925090850190600101611be5565b509098975050505050505050565b6020815260008251806020840152611cc7816040850160208701611d84565b601f01601f19169190910160400192915050565b60208082526025908201527f41646d696e61626c653a206e6f74206120534c494e4753484f545f41444d494e6040820152645f524f4c4560d81b606082015260800190565b60008235603e19833603018112611b1857600080fd5b60008219821115611d4957611d49611de2565b500190565b6000816000190483118215151615611d6857611d68611de2565b500290565b600082821015611d7f57611d7f611de2565b500390565b60005b83811015611d9f578181015183820152602001611d87565b83811115610d335750506000910152565b600081611dbf57611dbf611de2565b506000190190565b6000600019821415611ddb57611ddb611de2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe7877fef97c92b5f3b5ebcb9fa91c63afd92c0678029d5da88bca355cc325895ea264697066735822122083524f2eff3dac299543a570750181ba443d6bf94e035f6d53775bb5204c87e964736f6c6343000807003360c060405234801561001057600080fd5b5060405161113f38038061113f83398101604081905261002f916100c2565b61003833610056565b6001600160601b0319606092831b8116608052911b1660a0526100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100bd57600080fd5b919050565b600080604083850312156100d557600080fd5b6100de836100a6565b91506100ec602084016100a6565b90509250929050565b60805160601c60a05160601c61100b6101346000396000818160be0152610580015260008181610211015281816104330152610532015261100b6000f3fe6080604052600436106100a05760003560e01c8063c35085fb11610064578063c35085fb1461017f578063c62bd31d1461019f578063cea9d26f146101bf578063e0ca1474146101df578063e1758bd8146101ff578063f2fde38b1461023357600080fd5b806317fcb39b146100ac57806331489907146100fd578063715018a61461012a57806382a5be33146101415780638da5cb5b1461016157600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100e07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010957600080fd5b5061011d610118366004610de0565b610253565b6040516100f49190610ebd565b34801561013657600080fd5b5061013f610287565b005b34801561014d57600080fd5b5061011d61015c366004610e25565b61029b565b34801561016d57600080fd5b506000546001600160a01b03166100e0565b34801561018b57600080fd5b5061011d61019a366004610d7c565b6102b8565b3480156101ab57600080fd5b5061013f6101ba366004610ce5565b6102cd565b3480156101cb57600080fd5b5061013f6101da366004610ca9565b610429565b3480156101eb57600080fd5b5061013f6101fa366004610ca9565b610528565b34801561020b57600080fd5b506100e07f000000000000000000000000000000000000000000000000000000000000000081565b34801561023f57600080fd5b5061013f61024e366004610c87565b610691565b60608261025f8361070a565b604051602001610270929190610e8e565b604051602081830303815290604052905092915050565b61028f6107a7565b6102996000610801565b565b60606102a68361070a565b82604051602001610270929190610e8e565b60608282604051602001610270929190610e8e565b6102d56107a7565b60005b81811015610424576000808484848181106102f5576102f5610fa9565b90506020028101906103079190610f3e565b610315906020810190610c87565b6001600160a01b031685858581811061033057610330610fa9565b90506020028101906103429190610f3e565b610350906020810190610ef0565b60405161035e929190610e62565b600060405180830381855af49150503d8060008114610399576040519150601f19603f3d011682016040523d82523d6000602084013e61039e565b606091505b5091509150816103e78261019a6040518060400160405280601a81526020017f457865637574696f6e65723a2073776170206661696c65643a2000000000000081525087610253565b9061040e5760405162461bcd60e51b81526004016104059190610ebd565b60405180910390fd5b505050808061041c90610f80565b9150506102d8565b505050565b6104316107a7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610514576000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104b8576040519150601f19603f3d011682016040523d82523d6000602084013e6104bd565b606091505b505090508061050e5760405162461bcd60e51b815260206004820152601f60248201527f457865637574696f6e65723a2045544820726573637565206661696c65642e006044820152606401610405565b50505050565b6104246001600160a01b0384168383610851565b6105306107a7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561051457604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156105cc57600080fd5b505af11580156105e0573d6000803e3d6000fd5b505050506000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610631576040519150601f19603f3d011682016040523d82523d6000602084013e610636565b606091505b505090508061050e5760405162461bcd60e51b815260206004820152602160248201527f457865637574696f6e65723a20455448205472616e73666572206661696c65646044820152601760f91b6064820152608401610405565b6106996107a7565b6001600160a01b0381166106fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610405565b61070781610801565b50565b60606000610717836108a3565b600101905060008167ffffffffffffffff81111561073757610737610fbf565b6040519080825280601f01601f191660200182016040528015610761576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461079a5761079f565b61076b565b509392505050565b6000546001600160a01b031633146102995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610405565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261042490849061097c565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106108e25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061090e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061092c57662386f26fc10000830492506010015b6305f5e1008310610944576305f5e100830492506008015b612710831061095857612710830492506004015b6064831061096a576064830492506002015b600a8310610976576001015b92915050565b60006109d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a519092919063ffffffff16565b90508051600014806109f25750808060200190518101906109f29190610d5a565b6104245760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610405565b6060610a608484600085610a68565b949350505050565b606082471015610ac95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610405565b600080866001600160a01b03168587604051610ae59190610e72565b60006040518083038185875af1925050503d8060008114610b22576040519150601f19603f3d011682016040523d82523d6000602084013e610b27565b606091505b5091509150610b3887838387610b43565b979650505050505050565b60608315610baf578251610ba8576001600160a01b0385163b610ba85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610405565b5081610a60565b610a608383815115610bc45781518083602001fd5b8060405162461bcd60e51b81526004016104059190610ebd565b80356001600160a01b0381168114610bf557600080fd5b919050565b600082601f830112610c0b57600080fd5b813567ffffffffffffffff80821115610c2657610c26610fbf565b604051601f8301601f19908116603f01168101908282118183101715610c4e57610c4e610fbf565b81604052838152866020858801011115610c6757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610c9957600080fd5b610ca282610bde565b9392505050565b600080600060608486031215610cbe57600080fd5b610cc784610bde565b9250610cd560208501610bde565b9150604084013590509250925092565b60008060208385031215610cf857600080fd5b823567ffffffffffffffff80821115610d1057600080fd5b818501915085601f830112610d2457600080fd5b813581811115610d3357600080fd5b8660208260051b8501011115610d4857600080fd5b60209290920196919550909350505050565b600060208284031215610d6c57600080fd5b81518015158114610ca257600080fd5b60008060408385031215610d8f57600080fd5b823567ffffffffffffffff80821115610da757600080fd5b610db386838701610bfa565b93506020850135915080821115610dc957600080fd5b50610dd685828601610bfa565b9150509250929050565b60008060408385031215610df357600080fd5b823567ffffffffffffffff811115610e0a57600080fd5b610e1685828601610bfa565b95602094909401359450505050565b60008060408385031215610e3857600080fd5b82359150602083013567ffffffffffffffff811115610e5657600080fd5b610dd685828601610bfa565b8183823760009101908152919050565b60008251610e84818460208701610f54565b9190910192915050565b60008351610ea0818460208801610f54565b835190830190610eb4818360208801610f54565b01949350505050565b6020815260008251806020840152610edc816040850160208701610f54565b601f01601f19169190910160400192915050565b6000808335601e19843603018112610f0757600080fd5b83018035915067ffffffffffffffff821115610f2257600080fd5b602001915036819003821315610f3757600080fd5b9250929050565b60008235603e19833603018112610e8457600080fd5b60005b83811015610f6f578181015183820152602001610f57565b8381111561050e5750506000910152565b6000600019821415610fa257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e070c0fce93810e22bd757b5953da399e62106cb716415e1e234f1383f4e930564736f6c634300080700337877fef97c92b5f3b5ebcb9fa91c63afd92c0678029d5da88bca355cc325895e",
    "sourceMap": "1152:7159:4:-:0;;;2122:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:19;1821:22;;2255:50:4;;2271:12;;2285:19;;2255:50;;;:::i;:::-;-1:-1:-1;;;;;809:15:32;;;791:34;;861:15;;856:2;841:18;;834:43;741:2;726:18;2255:50:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:64:4;;-1:-1:-1;;;;;;2241:64:4;;;2315:19;2327:6;2315:11;:19::i;:::-;-1:-1:-1;;;;;;2344:26:4;;;;;;;;2380:56;;;;;-1:-1:-1;1152:7159:4;;630:170:0;686:57;-1:-1:-1;;;;;;;;;;;369:33:0;686:13;:57::i;:::-;753:40;-1:-1:-1;;;;;;;;;;;786:6:0;753:10;:40::i;:::-;630:170;:::o;7172:247:16:-;7255:25;4604:12;;;;;;;;;;;:22;;;;7311:34;;;;7360:52;;4604:22;;7311:34;;4604:22;;:12;;7360:52;;7255:25;7360:52;7245:174;7172:247;;:::o;6937:110::-;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;7587:233::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:16;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:16;;;;;;;;;:36;;-1:-1:-1;;7708:36:16;7740:4;7708:36;;;7790:12;719:10:24;;640:96;7790:12:16;-1:-1:-1;;;;;7763:40:16;7781:7;-1:-1:-1;;;;;7763:40:16;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;1152:7159:4:-;;;;;;;;:::o;14:177:32:-;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:304::-;1152:7159:4;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061012e5760003560e01c806382a5be33116100ab578063c35085fb1161006f578063c35085fb14610370578063cea9d26f14610390578063d547741f146103b0578063dc6ab02f146103d0578063e1758bd814610404578063e6c68d9c1461043857600080fd5b806382a5be33146102db57806391d14854146102fb57806397516dba1461031b578063a217fddf1461033b578063b95459e41461035057600080fd5b80632922a751116100f25780632922a7511461022e5780632f2ff15d1461024e578063314899071461026e57806336568abe1461029b57806343ec1d28146102bb57600080fd5b806301ffc9a71461013a57806306e757221461016f5780630ff4dc861461018457806317fcb39b146101a4578063248a9ca3146101f057600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a6101553660046119dd565b61045a565b60405190151581526020015b60405180910390f35b61018261017d3660046118bb565b610491565b005b34801561019057600080fd5b5061018261019f366004611864565b6108fe565b3480156101b057600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610166565b3480156101fc57600080fd5b5061022061020b366004611998565b60009081526020819052604090206001015490565b604051908152602001610166565b34801561023a57600080fd5b506003546101d8906001600160a01b031681565b34801561025a57600080fd5b506101826102693660046119b1565b61099b565b34801561027a57600080fd5b5061028e610289366004611a6b565b6109c5565b6040516101669190611ca8565b3480156102a757600080fd5b506101826102b63660046119b1565b6109f9565b3480156102c757600080fd5b506101826102d6366004611864565b610a77565b3480156102e757600080fd5b5061028e6102f6366004611ac9565b610b0c565b34801561030757600080fd5b5061015a6103163660046119b1565b610b29565b34801561032757600080fd5b5061018261033636600461187f565b610b52565b34801561034757600080fd5b50610220600081565b34801561035c57600080fd5b506002546101d8906001600160a01b031681565b34801561037c57600080fd5b5061028e61038b366004611a07565b610c0d565b34801561039c57600080fd5b506101826103ab36600461187f565b610c22565b3480156103bc57600080fd5b506101826103cb3660046119b1565b610d4d565b3480156103dc57600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b34801561041057600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b34801561044457600080fd5b50610220600080516020611e2583398151915281565b60006001600160e01b03198216637965db0b60e01b148061048b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b610499610d72565b600082116104ff5760405162461bcd60e51b815260206004820152602860248201527f536c696e6773686f743a2066696e616c416d6f756e744d696e2063616e6e6f74604482015267206265207a65726f60c01b60648201526084015b60405180910390fd5b826105565760405162461bcd60e51b815260206004820152602160248201527f536c696e6773686f743a207472616465732063616e6e6f7420626520656d70746044820152607960f81b60648201526084016104f6565b60005b83811015610679576002546001600160a01b03166342f6e38986868481811061058457610584611df8565b90506020028101906105969190611d20565b6105a4906020810190611864565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156105e357600080fd5b505afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611976565b6106675760405162461bcd60e51b815260206004820152601760248201527f536c696e6773686f743a206e6f742061206d6f64756c6500000000000000000060448201526064016104f6565b8061067181611dc7565b915050610559565b50600061068587610dcc565b9050610692883388610ed6565b60405163c62bd31d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c62bd31d906106e09088908890600401611bc6565b600060405180830381600087803b1580156106fa57600080fd5b505af115801561070e573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316886001600160a01b0316141561077e576107777f0000000000000000000000000000000000000000000000000000000000000000610dcc565b905061078a565b61078788610dcc565b90505b60006107968383611d6d565b9050848110156107fd5760405162461bcd60e51b815260206004820152602c60248201527f536c696e6773686f743a20726573756c74206973206c6f776572207468616e2060448201526b3932b8bab4b932b21036b4b760a11b60648201526084016104f6565b604080516001600160a01b038c811682528b1660208201528082018a905260608101839052905133917f899a8968d68f840cf01fdaf129bf72e96ca51b8ecad8c4f7566938e7a2ba6bcf919081900360800190a26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e0ca14748a336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401600060405180830381600087803b1580156108d157600080fd5b505af11580156108e5573d6000803e3d6000fd5b505050505050506108f560018055565b50505050505050565b610916600080516020611e2583398151915233610b29565b6109325760405162461bcd60e51b81526004016104f690611cdb565b600354604080516001600160a01b03928316815291831660208301527f239f6ee0f4464abee0bf30a68656d0148b186652f60e06b262b21de5becd2634910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152602081905260409020600101546109b681611093565b6109c083836110a0565b505050565b6060826109d183611124565b6040516020016109e2929190611b22565b604051602081830303815290604052905092915050565b6001600160a01b0381163314610a695760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104f6565b610a7382826111c1565b5050565b610a8f600080516020611e2583398151915233610b29565b610aab5760405162461bcd60e51b81526004016104f690611cdb565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f318d2d1842c685cc3f443bcf18cbd2360ded5f5e0f803d558d2d92a5560e37ed910160405180910390a15050565b6060610b1783611124565b826040516020016109e2929190611b22565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610b6a600080516020611e2583398151915233610b29565b610b865760405162461bcd60e51b81526004016104f690611cdb565b60405163cea9d26f60e01b81526001600160a01b0384811660048301528381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063cea9d26f906064015b600060405180830381600087803b158015610bf957600080fd5b505af11580156108f5573d6000803e3d6000fd5b606082826040516020016109e2929190611b22565b610c3a600080516020611e2583398151915233610b29565b610c565760405162461bcd60e51b81526004016104f690611cdb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610d39576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610cdd576040519150601f19603f3d011682016040523d82523d6000602084013e610ce2565b606091505b5050905080610d335760405162461bcd60e51b815260206004820152601d60248201527f536c696e6773686f743a2045544820726573637565206661696c65642e00000060448201526064016104f6565b50505050565b6109c06001600160a01b0384168383611226565b600082815260208190526040902060010154610d6881611093565b6109c083836111c1565b60026001541415610dc55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f6565b6002600155565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610e385750506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163190565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528316906370a082319060240160206040518083038186803b158015610e9957600080fd5b505afa158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190611ab0565b919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561102a57803414610f5f5760405162461bcd60e51b815260206004820152601e60248201527f536c696e6773686f743a20696e636f7272656374204554482076616c7565000060448201526064016104f6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610fba57600080fd5b505af1158015610fce573d6000803e3d6000fd5b506109c09350506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691507f0000000000000000000000000000000000000000000000000000000000000000905083611226565b600354604051630aed65f560e11b81526001600160a01b03858116600483015284811660248301527f00000000000000000000000000000000000000000000000000000000000000008116604483015260648201849052909116906315dacbea90608401610bdf565b61109d8133611278565b50565b6110aa8282610b29565b610a73576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556110e03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60606000611131836112d1565b600101905060008167ffffffffffffffff81111561115157611151611e0e565b6040519080825280601f01601f19166020018201604052801561117b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111b4576111b9565b611185565b509392505050565b6111cb8282610b29565b15610a73576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109c09084906113a9565b6112828282610b29565b610a735761128f8161147e565b61129a836020611490565b6040516020016112ab929190611b51565b60408051601f198184030181529082905262461bcd60e51b82526104f691600401611ca8565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113105772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061133c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061135a57662386f26fc10000830492506010015b6305f5e1008310611372576305f5e100830492506008015b612710831061138657612710830492506004015b60648310611398576064830492506002015b600a831061048b5760010192915050565b60006113fe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116339092919063ffffffff16565b905080516000148061141f57508080602001905181019061141f9190611976565b6109c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f6565b606061048b6001600160a01b03831660145b6060600061149f836002611d4e565b6114aa906002611d36565b67ffffffffffffffff8111156114c2576114c2611e0e565b6040519080825280601f01601f1916602001820160405280156114ec576020820181803683370190505b509050600360fc1b8160008151811061150757611507611df8565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061153657611536611df8565b60200101906001600160f81b031916908160001a905350600061155a846002611d4e565b611565906001611d36565b90505b60018111156115dd576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061159957611599611df8565b1a60f81b8282815181106115af576115af611df8565b60200101906001600160f81b031916908160001a90535060049490941c936115d681611db0565b9050611568565b50831561162c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104f6565b9392505050565b6060611642848460008561164a565b949350505050565b6060824710156116ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f6565b600080866001600160a01b031685876040516116c79190611b06565b60006040518083038185875af1925050503d8060008114611704576040519150601f19603f3d011682016040523d82523d6000602084013e611709565b606091505b509150915061171a87838387611725565b979650505050505050565b6060831561179157825161178a576001600160a01b0385163b61178a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f6565b5081611642565b61164283838151156117a65781518083602001fd5b8060405162461bcd60e51b81526004016104f69190611ca8565b80356001600160a01b0381168114610ed157600080fd5b600082601f8301126117e857600080fd5b813567ffffffffffffffff8082111561180357611803611e0e565b604051601f8301601f19908116603f0116810190828211818310171561182b5761182b611e0e565b8160405283815286602085880101111561184457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561187657600080fd5b61162c826117c0565b60008060006060848603121561189457600080fd5b61189d846117c0565b92506118ab602085016117c0565b9150604084013590509250925092565b600080600080600080600060c0888a0312156118d657600080fd5b6118df886117c0565b96506118ed602089016117c0565b955060408801359450606088013567ffffffffffffffff8082111561191157600080fd5b818a0191508a601f83011261192557600080fd5b81358181111561193457600080fd5b8b60208260051b850101111561194957600080fd5b6020830196508095505050506080880135915061196860a089016117c0565b905092959891949750929550565b60006020828403121561198857600080fd5b8151801515811461162c57600080fd5b6000602082840312156119aa57600080fd5b5035919050565b600080604083850312156119c457600080fd5b823591506119d4602084016117c0565b90509250929050565b6000602082840312156119ef57600080fd5b81356001600160e01b03198116811461162c57600080fd5b60008060408385031215611a1a57600080fd5b823567ffffffffffffffff80821115611a3257600080fd5b611a3e868387016117d7565b93506020850135915080821115611a5457600080fd5b50611a61858286016117d7565b9150509250929050565b60008060408385031215611a7e57600080fd5b823567ffffffffffffffff811115611a9557600080fd5b611aa1858286016117d7565b95602094909401359450505050565b600060208284031215611ac257600080fd5b5051919050565b60008060408385031215611adc57600080fd5b82359150602083013567ffffffffffffffff811115611afa57600080fd5b611a61858286016117d7565b60008251611b18818460208701611d84565b9190910192915050565b60008351611b34818460208801611d84565b835190830190611b48818360208801611d84565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b89816017850160208801611d84565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611bba816028840160208801611d84565b01602801949350505050565b60208082528181018390526000906040808401600586901b8501820187855b88811015611c9a57878303603f190184528135368b9003603e19018112611c0b57600080fd5b8a016001600160a01b03611c1e826117c0565b16845286810135601e19823603018112611c3757600080fd5b8101803567ffffffffffffffff811115611c5057600080fd5b803603831315611c5f57600080fd5b87898701528088870152606092508089830184880137600086820184015295880195601f01601f191690940101925090850190600101611be5565b509098975050505050505050565b6020815260008251806020840152611cc7816040850160208701611d84565b601f01601f19169190910160400192915050565b60208082526025908201527f41646d696e61626c653a206e6f74206120534c494e4753484f545f41444d494e6040820152645f524f4c4560d81b606082015260800190565b60008235603e19833603018112611b1857600080fd5b60008219821115611d4957611d49611de2565b500190565b6000816000190483118215151615611d6857611d68611de2565b500290565b600082821015611d7f57611d7f611de2565b500390565b60005b83811015611d9f578181015183820152602001611d87565b83811115610d335750506000910152565b600081611dbf57611dbf611de2565b506000190190565b6000600019821415611ddb57611ddb611de2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe7877fef97c92b5f3b5ebcb9fa91c63afd92c0678029d5da88bca355cc325895ea264697066735822122083524f2eff3dac299543a570750181ba443d6bf94e035f6d53775bb5204c87e964736f6c63430008070033",
    "sourceMap": "1152:7159:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:16;;;;;;;;;;-1:-1:-1;2732:202:16;;;;;:::i;:::-;;:::i;:::-;;;10802:14:32;;10795:22;10777:41;;10765:2;10750:18;2732:202:16;;;;;;;;2942:1549:4;;;;;;:::i;:::-;;:::i;:::-;;4639:218;;;;;;;;;;-1:-1:-1;4639:218:4;;;;;:::i;:::-;;:::i;1591:50::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6915:32:32;;;6897:51;;6885:2;6870:18;1591:50:4;6751:203:32;4504:129:16;;;;;;;;;;-1:-1:-1;4504:129:16;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;;;;10975:25:32;;;10963:2;10948:18;4504:129:16;10829:177:32;1736:38:4;;;;;;;;;;-1:-1:-1;1736:38:4;;;;-1:-1:-1;;;;;1736:38:4;;;4929:145:16;;;;;;;;;;-1:-1:-1;4929:145:16;;;;;:::i;:::-;;:::i;729:184:7:-;;;;;;;;;;-1:-1:-1;729:184:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6038:214:16:-;;;;;;;;;;-1:-1:-1;6038:214:16;;;;;:::i;:::-;;:::i;4985:253:4:-;;;;;;;;;;-1:-1:-1;4985:253:4;;;;;:::i;:::-;;:::i;1084:185:7:-;;;;;;;;;;-1:-1:-1;1084:185:7;;;;;:::i;:::-;;:::i;3021:145:16:-;;;;;;;;;;-1:-1:-1;3021:145:16;;;;;:::i;:::-;;:::i;6162:189:4:-;;;;;;;;;;-1:-1:-1;6162:189:4;;;;;:::i;:::-;;:::i;2153:49:16:-;;;;;;;;;;-1:-1:-1;2153:49:16;2198:4;2153:49;;1694:36:4;;;;;;;;;;-1:-1:-1;1694:36:4;;;;-1:-1:-1;;;;;1694:36:4;;;386:187:7;;;;;;;;;;-1:-1:-1;386:187:7;;;;;:::i;:::-;;:::i;5521:358:4:-;;;;;;;;;;-1:-1:-1;5521:358:4;;;;;:::i;:::-;;:::i;5354:147:16:-;;;;;;;;;;-1:-1:-1;5354:147:16;;;;;:::i;:::-;;:::i;1647:40:4:-;;;;;;;;;;;;;;;1455:36;;;;;;;;;;;;;;;314:88:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;314:88:0;;2732:202:16;2817:4;-1:-1:-1;;;;;;2840:47:16;;-1:-1:-1;;;2840:47:16;;:87;;-1:-1:-1;;;;;;;;;;937:40:26;;;2891:36:16;2833:94;2732:202;-1:-1:-1;;2732:202:16:o;2942:1549:4:-;2261:21:19;:19;:21::i;:::-;3235:1:4::1;3218:14;:18;3210:71;;;::::0;-1:-1:-1;;;3210:71:4;;12889:2:32;3210:71:4::1;::::0;::::1;12871:21:32::0;12928:2;12908:18;;;12901:30;12967:34;12947:18;;;12940:62;-1:-1:-1;;;13018:18:32;;;13011:38;13066:19;;3210:71:4::1;;;;;;;;;3299:17:::0;3291:63:::1;;;::::0;-1:-1:-1;;;3291:63:4;;14828:2:32;3291:63:4::1;::::0;::::1;14810:21:32::0;14867:2;14847:18;;;14840:30;14906:34;14886:18;;;14879:62;-1:-1:-1;;;14957:18:32;;;14950:31;14998:19;;3291:63:4::1;14626:397:32::0;3291:63:4::1;3369:9;3364:268;3384:17:::0;;::::1;3364:268;;;3516:14;::::0;-1:-1:-1;;;;;3516:14:4::1;:23;3540:6:::0;;3547:1;3540:9;;::::1;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;3516:48;::::0;-1:-1:-1;;;;;;3516:48:4::1;::::0;;;;;;-1:-1:-1;;;;;6915:32:32;;;3516:48:4::1;::::0;::::1;6897:51:32::0;6870:18;;3516:48:4::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3491:130;;;::::0;-1:-1:-1;;;3491:130:4;;14118:2:32;3491:130:4::1;::::0;::::1;14100:21:32::0;14157:2;14137:18;;;14130:30;14196:25;14176:18;;;14169:53;14239:18;;3491:130:4::1;13916:347:32::0;3491:130:4::1;3403:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3364:268;;;;3642:22;3667:25;3684:7;3667:16;:25::i;:::-;3642:50:::0;-1:-1:-1;3702:56:4::1;3722:9:::0;719:10:24;3747::4::1;3702:19;:56::i;:::-;3769:33;::::0;-1:-1:-1;;;3769:33:4;;-1:-1:-1;;;;;3769:11:4::1;:25;::::0;::::1;::::0;:33:::1;::::0;3795:6;;;;3769:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3813:17;3855:11;-1:-1:-1::0;;;;;3844:22:4::1;:7;-1:-1:-1::0;;;;;3844:22:4::1;;3840:184;;;3897:45;3922:18;3897:16;:45::i;:::-;3882:60;;3840:184;;;3988:25;4005:7;3988:16;:25::i;:::-;3973:40;;3840:184;4033:22;4058:29;4073:14:::0;4058:12;:29:::1;:::i;:::-;4033:54;;4139:14;4118:17;:35;;4097:126;;;::::0;-1:-1:-1;;;4097:126:4;;13298:2:32;4097:126:4::1;::::0;::::1;13280:21:32::0;13337:2;13317:18;;;13310:30;13376:34;13356:18;;;13349:62;-1:-1:-1;;;13427:18:32;;;13420:42;13479:19;;4097:126:4::1;13096:408:32::0;4097:126:4::1;4239:140;::::0;;-1:-1:-1;;;;;8396:15:32;;;8378:34;;8448:15;;8443:2;8428:18;;8421:43;8480:18;;;8473:34;;;8538:2;8523:18;;8516:34;;;4239:140:4;;719:10:24;;4239:140:4::1;::::0;;;;;8327:3:32;4239:140:4;;::::1;-1:-1:-1::0;;;;;4421:11:4::1;:21;;4443:7:::0;719:10:24;4421:63:4::1;::::0;-1:-1:-1;;;;;;4421:63:4::1;::::0;;;;;;-1:-1:-1;;;;;7987:15:32;;;4421:63:4::1;::::0;::::1;7969:34:32::0;8039:15;;8019:18;;;8012:43;8071:18;;;8064:34;;;7904:18;;4421:63:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3180:1311;;;2303:20:19::0;1716:1;2809:22;;2629:209;2303:20;2942:1549:4;;;;;;;:::o;4639:218::-;461:43:0;-1:-1:-1;;;;;;;;;;;719:10:24;3021:145:16;:::i;461:43:0:-;440:127;;;;-1:-1:-1;;;440:127:0;;;;;;;:::i;:::-;4754:15:4::1;::::0;4727:62:::1;::::0;;-1:-1:-1;;;;;4754:15:4;;::::1;7171:34:32::0;;7241:15;;;7236:2;7221:18;;7214:43;4727:62:4::1;::::0;7106:18:32;4727:62:4::1;;;;;;;4799:15;:51:::0;;-1:-1:-1;;;;;;4799:51:4::1;-1:-1:-1::0;;;;;4799:51:4;;;::::1;::::0;;;::::1;::::0;;4639:218::o;4929:145:16:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;729:184:7:-;823:20;886:4;892:12;:1;:10;:12::i;:::-;869:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;855:51;;729:184;;;;:::o;6038:214:16:-;-1:-1:-1;;;;;6133:23:16;;719:10:24;6133:23:16;6125:83;;;;-1:-1:-1;;;6125:83:16;;17124:2:32;6125:83:16;;;17106:21:32;17163:2;17143:18;;;17136:30;17202:34;17182:18;;;17175:62;-1:-1:-1;;;17253:18:32;;;17246:45;17308:19;;6125:83:16;16922:411:32;6125:83:16;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;4985:253:4:-;461:43:0;-1:-1:-1;;;;;;;;;;;719:10:24;3021:145:16;:::i;461:43:0:-;440:127;;;;-1:-1:-1;;;440:127:0;;;;;;;:::i;:::-;5096:14:4::1;::::0;;-1:-1:-1;;;;;5121:48:4;;::::1;-1:-1:-1::0;;;;;;5121:48:4;::::1;::::0;::::1;::::0;;;5184:47:::1;::::0;;5096:14;;;::::1;7171:34:32::0;;;7236:2;7221:18;;7214:43;;;;5184:47:4::1;::::0;7106:18:32;5184:47:4::1;;;;;;;5056:182;4985:253:::0;:::o;1084:185:7:-;1180:20;1243:12;:1;:10;:12::i;:::-;1257:3;1226:35;;;;;;;;;:::i;3021:145:16:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:16;;;;;;;;;;;;;;;3021:145::o;6162:189:4:-;461:43:0;-1:-1:-1;;;;;;;;;;;719:10:24;3021:145:16;:::i;461:43:0:-;440:127;;;;-1:-1:-1;;;440:127:0;;;;;;;:::i;:::-;6301:43:4::1;::::0;-1:-1:-1;;;6301:43:4;;-1:-1:-1;;;;;7987:15:32;;;6301:43:4::1;::::0;::::1;7969:34:32::0;8039:15;;;8019:18;;;8012:43;8071:18;;;8064:34;;;6301:11:4::1;:24;::::0;::::1;::::0;7904:18:32;;6301:43:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;386:187:7::0;491:20;554:4;560;537:28;;;;;;;;;:::i;5521:358:4:-;461:43:0;-1:-1:-1;;;;;;;;;;;719:10:24;3021:145:16;:::i;461:43:0:-;440:127;;;;-1:-1:-1;;;440:127:0;;;;;;;:::i;:::-;5658:11:4::1;-1:-1:-1::0;;;;;5649:20:4::1;:5;-1:-1:-1::0;;;;;5649:20:4::1;;5645:228;;;5686:12;5704:2;-1:-1:-1::0;;;;;5704:7:4::1;5719:6;5704:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5685:45;;;5752:7;5744:49;;;::::0;-1:-1:-1;;;5744:49:4;;14470:2:32;5744:49:4::1;::::0;::::1;14452:21:32::0;14509:2;14489:18;;;14482:30;14548:31;14528:18;;;14521:59;14597:18;;5744:49:4::1;14268:353:32::0;5744:49:4::1;5671:133;4929:145:16::0;;;:::o;5645:228:4:-:1;5824:38;-1:-1:-1::0;;;;;5824:26:4;::::1;5851:2:::0;5855:6;5824:26:::1;:38::i;5354:147:16:-:0;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;2336:287:19:-:0;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:19;;16764:2:32;2460:63:19;;;16746:21:32;16803:2;16783:18;;;16776:30;16842:33;16822:18;;;16815:61;16893:18;;2460:63:19;16562:355:32;2460:63:19;1759:1;2598:7;:18;2336:287::o;7359:258:4:-;7423:7;7455:11;-1:-1:-1;;;;;7446:20:4;:5;-1:-1:-1;;;;;7446:20:4;;7442:169;;;-1:-1:-1;;;;;;;7497:11:4;7489:28;;;7359:258::o;7442:169::-;7555:45;;-1:-1:-1;;;7555:45:4;;-1:-1:-1;;;;;7587:11:4;6915:32:32;;7555:45:4;;;6897:51:32;7555:23:4;;;;;6870:18:32;;7555:45:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7442:169::-;7359:258;;;:::o;6601:605::-;6784:11;-1:-1:-1;;;;;6771:24:4;:9;-1:-1:-1;;;;;6771:24:4;;6767:433;;;6832:6;6819:9;:19;6811:62;;;;-1:-1:-1;;;6811:62:4;;16405:2:32;6811:62:4;;;16387:21:32;16444:2;16424:18;;;16417:30;16483:32;16463:18;;;16456:60;16533:18;;6811:62:4;16203:354:32;6811:62:4;6887:18;-1:-1:-1;;;;;6887:26:4;;6921:6;6887:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6944:61:4;;-1:-1:-1;;;;;;;6944:18:4;:31;;-1:-1:-1;6984:11:4;;-1:-1:-1;6998:6:4;6944:31;:61::i;6767:433::-;7036:15;;:153;;-1:-1:-1;;;7036:153:4;;-1:-1:-1;;;;;7555:15:32;;;7036:153:4;;;7537:34:32;7607:15;;;7587:18;;;7580:43;7139:11:4;7659:15:32;;7639:18;;;7632:43;7691:18;;;7684:34;;;7036:15:4;;;;:28;;7471:19:32;;7036:153:4;7268:456:32;3460:103:16;3526:30;3537:4;719:10:24;3526::16;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:16;;;;;;;;;:36;;-1:-1:-1;;7708:36:16;7740:4;7708:36;;;7790:12;719:10:24;;640:96;7790:12:16;-1:-1:-1;;;;;7763:40:16;7781:7;-1:-1:-1;;;;;7763:40:16;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;447:696:25:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:25;-1:-1:-1;604:41:25;-1:-1:-1;765:28:25;;;781:2;765:28;820:280;-1:-1:-1;;851:5:25;-1:-1:-1;;;985:2:25;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1068:10:25;1064:21;;1080:5;;1064:21;820:280;;;-1:-1:-1;1120:6:25;447:696;-1:-1:-1;;;447:696:25:o;7991:234:16:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:16;;;;;;;;;;:37;;-1:-1:-1;;8112:37:16;;;8168:40;719:10:24;;8112:12:16;;8168:40;;8144:5;8168:40;7991:234;;:::o;941:175:22:-;1050:58;;;-1:-1:-1;;;;;8753:32:32;;1050:58:22;;;8735:51:32;8802:18;;;;8795:34;;;1050:58:22;;;;;;;;;;8708:18:32;;;;1050:58:22;;;;;;;;-1:-1:-1;;;;;1050:58:22;-1:-1:-1;;;1050:58:22;;;1023:86;;1043:5;;1023:19;:86::i;3844:479:16:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:16;;;;;;;;;;-1:-1:-1;;;3970:336:16;;;;;;;:::i;10139:916:28:-;10192:7;;-1:-1:-1;;;10267:17:28;;10263:103;;-1:-1:-1;;;10304:17:28;;;-1:-1:-1;10349:2:28;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:28;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:28;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:28;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:28;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:28;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:28:o;5196:642:22:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:22;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:22;;15994:2:32;5720:111:22;;;15976:21:32;16033:2;16013:18;;;16006:30;16072:34;16052:18;;;16045:62;-1:-1:-1;;;16123:18:32;;;16116:40;16173:19;;5720:111:22;15792:406:32;2407:149:25;2465:13;2497:52;-1:-1:-1;;;;;2509:22:25;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:25;;1918:47;;-1:-1:-1;;;1975:6:25;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:25;;;;;;;;;-1:-1:-1;;;2000:6:25;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:25;;;;;;;;-1:-1:-1;2030:9:25;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:25;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:25;;;;;;;;-1:-1:-1;2141:1:25;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:25;;2162:55;;;;-1:-1:-1;;;2162:55:25;;12528:2:32;2162:55:25;;;12510:21:32;;;12547:18;;;12540:30;12606:34;12586:18;;;12579:62;12658:18;;2162:55:25;12326:356:32;2162:55:25;2241:6;1818:437;-1:-1:-1;;;1818:437:25:o;4108:223:23:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:23:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:23;;13711:2:32;5354:81:23;;;13693:21:32;13750:2;13730:18;;;13723:30;13789:34;13769:18;;;13762:62;-1:-1:-1;;;13840:18:32;;;13833:36;13886:19;;5354:81:23;13509:402:32;5354:81:23;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:23;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:23:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:23;;;8113:60;;;;-1:-1:-1;;;8113:60:23;;15230:2:32;8113:60:23;;;15212:21:32;15269:2;15249:18;;;15242:30;15308:31;15288:18;;;15281:59;15357:18;;8113:60:23;15028:353:32;8113:60:23;-1:-1:-1;8208:10:23;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:23;;;;;;;;:::i;14:173:32:-;82:20;;-1:-1:-1;;;;;131:31:32;;121:42;;111:70;;177:1;174;167:12;192:719;235:5;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;342:6;329:20;368:18;405:2;401;398:10;395:36;;;411:18;;:::i;:::-;486:2;480:9;454:2;540:13;;-1:-1:-1;;536:22:32;;;560:2;532:31;528:40;516:53;;;584:18;;;604:22;;;581:46;578:72;;;630:18;;:::i;:::-;670:10;666:2;659:22;705:2;697:6;690:18;751:3;744:4;739:2;731:6;727:15;723:26;720:35;717:55;;;768:1;765;758:12;717:55;832:2;825:4;817:6;813:17;806:4;798:6;794:17;781:54;879:1;872:4;867:2;859:6;855:15;851:26;844:37;899:6;890:15;;;;;;192:719;;;;:::o;916:186::-;975:6;1028:2;1016:9;1007:7;1003:23;999:32;996:52;;;1044:1;1041;1034:12;996:52;1067:29;1086:9;1067:29;:::i;1107:328::-;1184:6;1192;1200;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1292:29;1311:9;1292:29;:::i;:::-;1282:39;;1340:38;1374:2;1363:9;1359:18;1340:38;:::i;:::-;1330:48;;1425:2;1414:9;1410:18;1397:32;1387:42;;1107:328;;;;;:::o;1440:1007::-;1602:6;1610;1618;1626;1634;1642;1650;1703:3;1691:9;1682:7;1678:23;1674:33;1671:53;;;1720:1;1717;1710:12;1671:53;1743:29;1762:9;1743:29;:::i;:::-;1733:39;;1791:38;1825:2;1814:9;1810:18;1791:38;:::i;:::-;1781:48;;1876:2;1865:9;1861:18;1848:32;1838:42;;1931:2;1920:9;1916:18;1903:32;1954:18;1995:2;1987:6;1984:14;1981:34;;;2011:1;2008;2001:12;1981:34;2049:6;2038:9;2034:22;2024:32;;2094:7;2087:4;2083:2;2079:13;2075:27;2065:55;;2116:1;2113;2106:12;2065:55;2156:2;2143:16;2182:2;2174:6;2171:14;2168:34;;;2198:1;2195;2188:12;2168:34;2251:7;2246:2;2236:6;2233:1;2229:14;2225:2;2221:23;2217:32;2214:45;2211:65;;;2272:1;2269;2262:12;2211:65;2303:2;2299;2295:11;2285:21;;2325:6;2315:16;;;;;2378:3;2367:9;2363:19;2350:33;2340:43;;2402:39;2436:3;2425:9;2421:19;2402:39;:::i;:::-;2392:49;;1440:1007;;;;;;;;;;:::o;2452:277::-;2519:6;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;2620:9;2614:16;2673:5;2666:13;2659:21;2652:5;2649:32;2639:60;;2695:1;2692;2685:12;2734:180;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;-1:-1:-1;2885:23:32;;2734:180;-1:-1:-1;2734:180:32:o;2919:254::-;2987:6;2995;3048:2;3036:9;3027:7;3023:23;3019:32;3016:52;;;3064:1;3061;3054:12;3016:52;3100:9;3087:23;3077:33;;3129:38;3163:2;3152:9;3148:18;3129:38;:::i;:::-;3119:48;;2919:254;;;;;:::o;3178:286::-;3236:6;3289:2;3277:9;3268:7;3264:23;3260:32;3257:52;;;3305:1;3302;3295:12;3257:52;3331:23;;-1:-1:-1;;;;;;3383:32:32;;3373:43;;3363:71;;3430:1;3427;3420:12;3469:543;3557:6;3565;3618:2;3606:9;3597:7;3593:23;3589:32;3586:52;;;3634:1;3631;3624:12;3586:52;3674:9;3661:23;3703:18;3744:2;3736:6;3733:14;3730:34;;;3760:1;3757;3750:12;3730:34;3783:50;3825:7;3816:6;3805:9;3801:22;3783:50;:::i;:::-;3773:60;;3886:2;3875:9;3871:18;3858:32;3842:48;;3915:2;3905:8;3902:16;3899:36;;;3931:1;3928;3921:12;3899:36;;3954:52;3998:7;3987:8;3976:9;3972:24;3954:52;:::i;:::-;3944:62;;;3469:543;;;;;:::o;4017:390::-;4095:6;4103;4156:2;4144:9;4135:7;4131:23;4127:32;4124:52;;;4172:1;4169;4162:12;4124:52;4212:9;4199:23;4245:18;4237:6;4234:30;4231:50;;;4277:1;4274;4267:12;4231:50;4300;4342:7;4333:6;4322:9;4318:22;4300:50;:::i;:::-;4290:60;4397:2;4382:18;;;;4369:32;;-1:-1:-1;;;;4017:390:32:o;4412:184::-;4482:6;4535:2;4523:9;4514:7;4510:23;4506:32;4503:52;;;4551:1;4548;4541:12;4503:52;-1:-1:-1;4574:16:32;;4412:184;-1:-1:-1;4412:184:32:o;4601:390::-;4679:6;4687;4740:2;4728:9;4719:7;4715:23;4711:32;4708:52;;;4756:1;4753;4746:12;4708:52;4792:9;4779:23;4769:33;;4853:2;4842:9;4838:18;4825:32;4880:18;4872:6;4869:30;4866:50;;;4912:1;4909;4902:12;4866:50;4935;4977:7;4968:6;4957:9;4953:22;4935:50;:::i;4996:274::-;5125:3;5163:6;5157:13;5179:53;5225:6;5220:3;5213:4;5205:6;5201:17;5179:53;:::i;:::-;5248:16;;;;;4996:274;-1:-1:-1;;4996:274:32:o;5275:470::-;5454:3;5492:6;5486:13;5508:53;5554:6;5549:3;5542:4;5534:6;5530:17;5508:53;:::i;:::-;5624:13;;5583:16;;;;5646:57;5624:13;5583:16;5680:4;5668:17;;5646:57;:::i;:::-;5719:20;;5275:470;-1:-1:-1;;;;5275:470:32:o;5960:786::-;6371:25;6366:3;6359:38;6341:3;6426:6;6420:13;6442:62;6497:6;6492:2;6487:3;6483:12;6476:4;6468:6;6464:17;6442:62;:::i;:::-;-1:-1:-1;;;6563:2:32;6523:16;;;6555:11;;;6548:40;6613:13;;6635:63;6613:13;6684:2;6676:11;;6669:4;6657:17;;6635:63;:::i;:::-;6718:17;6737:2;6714:26;;5960:786;-1:-1:-1;;;;5960:786:32:o;8840:1792::-;9081:2;9133:21;;;9106:18;;;9189:22;;;9052:4;;9230:2;9248:18;;;9312:1;9308:14;;;9293:30;;9289:39;;9351:6;9052:4;9385:1218;9399:6;9396:1;9393:13;9385:1218;;;9464:22;;;-1:-1:-1;;9460:36:32;9448:49;;9536:20;;9611:14;9607:27;;;-1:-1:-1;;9603:41:32;9579:66;;9569:94;;9659:1;9656;9649:12;9569:94;9689:31;;-1:-1:-1;;;;;9752:25:32;9689:31;9752:25;:::i;:::-;9748:51;9740:6;9733:67;9865:2;9858:5;9854:14;9841:28;9954:2;9950:7;9942:5;9926:14;9922:26;9918:40;9896:20;9892:67;9882:95;;9973:1;9970;9963:12;9882:95;10005:32;;10064:21;;10112:18;10101:30;;10098:50;;;10144:1;10141;10134:12;10098:50;10195:6;10179:14;10175:27;10168:5;10164:39;10161:59;;;10216:1;10213;10206:12;10161:59;10257:2;10252;10244:6;10240:15;10233:27;10297:6;10292:2;10284:6;10280:15;10273:31;10327:2;10317:12;;10390:6;10385:2;10376:7;10372:16;10367:2;10359:6;10355:15;10342:55;10447:1;10421:19;;;10417:28;;10410:39;10581:12;;;;10513:2;10492:15;-1:-1:-1;;10488:29:32;10476:42;;;10472:51;;-1:-1:-1;10546:15:32;;;;9421:1;9414:9;9385:1218;;;-1:-1:-1;10620:6:32;;8840:1792;-1:-1:-1;;;;;;;;8840:1792:32:o;11938:383::-;12087:2;12076:9;12069:21;12050:4;12119:6;12113:13;12162:6;12157:2;12146:9;12142:18;12135:34;12178:66;12237:6;12232:2;12221:9;12217:18;12212:2;12204:6;12200:15;12178:66;:::i;:::-;12305:2;12284:15;-1:-1:-1;;12280:29:32;12265:45;;;;12312:2;12261:54;;11938:383;-1:-1:-1;;11938:383:32:o;15386:401::-;15588:2;15570:21;;;15627:2;15607:18;;;15600:30;15666:34;15661:2;15646:18;;15639:62;-1:-1:-1;;;15732:2:32;15717:18;;15710:35;15777:3;15762:19;;15386:401::o;17338:328::-;17435:4;17493:11;17480:25;17587:2;17583:7;17572:8;17556:14;17552:29;17548:43;17528:18;17524:68;17514:96;;17606:1;17603;17596:12;17671:128;17711:3;17742:1;17738:6;17735:1;17732:13;17729:39;;;17748:18;;:::i;:::-;-1:-1:-1;17784:9:32;;17671:128::o;17804:168::-;17844:7;17910:1;17906;17902:6;17898:14;17895:1;17892:21;17887:1;17880:9;17873:17;17869:45;17866:71;;;17917:18;;:::i;:::-;-1:-1:-1;17957:9:32;;17804:168::o;17977:125::-;18017:4;18045:1;18042;18039:8;18036:34;;;18050:18;;:::i;:::-;-1:-1:-1;18087:9:32;;17977:125::o;18107:258::-;18179:1;18189:113;18203:6;18200:1;18197:13;18189:113;;;18279:11;;;18273:18;18260:11;;;18253:39;18225:2;18218:10;18189:113;;;18320:6;18317:1;18314:13;18311:48;;;-1:-1:-1;;18355:1:32;18337:16;;18330:27;18107:258::o;18370:136::-;18409:3;18437:5;18427:39;;18446:18;;:::i;:::-;-1:-1:-1;;;18482:18:32;;18370:136::o;18511:135::-;18550:3;-1:-1:-1;;18571:17:32;;18568:43;;;18591:18;;:::i;:::-;-1:-1:-1;18638:1:32;18627:13;;18511:135::o;18651:127::-;18712:10;18707:3;18703:20;18700:1;18693:31;18743:4;18740:1;18733:15;18767:4;18764:1;18757:15;18915:127;18976:10;18971:3;18967:20;18964:1;18957:31;19007:4;19004:1;18997:15;19031:4;19028:1;19021:15;19047:127;19108:10;19103:3;19099:20;19096:1;19089:31;19139:4;19136:1;19129:15;19163:4;19160:1;19153:15",
    "linkReferences": {},
    "immutableReferences": {
      "574": [
        {
          "start": 1046,
          "length": 32
        },
        {
          "start": 1814,
          "length": 32
        },
        {
          "start": 3160,
          "length": 32
        },
        {
          "start": 3536,
          "length": 32
        },
        {
          "start": 3800,
          "length": 32
        }
      ],
      "578": [
        {
          "start": 438,
          "length": 32
        },
        {
          "start": 1875,
          "length": 32
        },
        {
          "start": 3937,
          "length": 32
        },
        {
          "start": 4063,
          "length": 32
        }
      ],
      "581": [
        {
          "start": 994,
          "length": 32
        },
        {
          "start": 1705,
          "length": 32
        },
        {
          "start": 2139,
          "length": 32
        },
        {
          "start": 2996,
          "length": 32
        },
        {
          "start": 3604,
          "length": 32
        },
        {
          "start": 3663,
          "length": 32
        },
        {
          "start": 4099,
          "length": 32
        },
        {
          "start": 4180,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "SLINGSHOT_ADMIN_ROLE()": "e6c68d9c",
    "appendString(string,string)": "c35085fb",
    "appendUint(string,uint256)": "31489907",
    "approvalHandler()": "2922a751",
    "executeTrades(address,address,uint256,(address,bytes)[],uint256,address)": "06e75722",
    "executioner()": "dc6ab02f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "moduleRegistry()": "b95459e4",
    "nativeToken()": "e1758bd8",
    "prependNumber(uint256,string)": "82a5be33",
    "renounceRole(bytes32,address)": "36568abe",
    "rescueTokens(address,address,uint256)": "cea9d26f",
    "rescueTokensFromExecutioner(address,address,uint256)": "97516dba",
    "revokeRole(bytes32,address)": "d547741f",
    "setApprovalHandler(address)": "0ff4dc86",
    "setModuleRegistry(address)": "43ec1d28",
    "supportsInterface(bytes4)": "01ffc9a7",
    "wrappedNativeToken()": "17fcb39b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedNativeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldApprovalHandler\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"approvalHandler\",\"type\":\"address\"}],\"name\":\"NewApprovalHandler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"NewModuleRegistry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLINGSHOT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"str2\",\"type\":\"string\"}],\"name\":\"appendString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str1\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"appendUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvalHandler\",\"outputs\":[{\"internalType\":\"contract ApprovalHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedCalldata\",\"type\":\"bytes\"}],\"internalType\":\"struct SlingshotI.TradeFormat[]\",\"name\":\"trades\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"finalAmountMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depricated\",\"type\":\"address\"}],\"name\":\"executeTrades\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executioner\",\"outputs\":[{\"internalType\":\"contract Executioner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleRegistry\",\"outputs\":[{\"internalType\":\"contract ModuleRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"prependNumber\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokensFromExecutioner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approvalHandler\",\"type\":\"address\"}],\"name\":\"setApprovalHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_moduleRegistry\",\"type\":\"address\"}],\"name\":\"setModuleRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"contract IWrappedNATIVE\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"DEXAG, Inc.\",\"details\":\"The specific logic for each DEX/AMM is defined within its          own corresponding module that is stored in the module registry.          Slingshot.sol references these modules to appropriately execute a trade.          Slingshot.sol also performs some safety checks to account for slippage          and security. Slingshot.sol depends on the Slingshot backend to provide          the details of how a given transaction will be executed within a          particular market.\",\"kind\":\"dev\",\"methods\":{\"appendString(string,string)\":{\"params\":{\"str1\":\"String to concat\",\"str2\":\"String to concat\"},\"returns\":{\"result\":\"Concatenated strings\"}},\"appendUint(string,uint256)\":{\"params\":{\"i\":\"Number to append\",\"str1\":\"String to concat\"},\"returns\":{\"result\":\"Concatenated strings\"}},\"executeTrades(address,address,uint256,(address,bytes)[],uint256,address)\":{\"params\":{\"depricated\":\"to be removed\",\"finalAmountMin\":\"The minimum expected output after all trades have been executed\",\"fromAmount\":\"The initial amount of fromToken to start trading with\",\"fromToken\":\"Start token address\",\"toToken\":\"Target token address\",\"trades\":\"Array of encoded trades that are atomically executed\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"prependNumber(uint256,string)\":{\"params\":{\"i\":\"Number to concat\",\"str\":\"String to concat\"},\"returns\":{\"result\":\"Concatenated string and number\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the token to rescue\",\"to\":\"The address of recipient\",\"token\":\"The address of the token to rescue\"}},\"rescueTokensFromExecutioner(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the token to rescue\",\"to\":\"The address of recipient\",\"token\":\"The address of the token to rescue\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setApprovalHandler(address)\":{\"params\":{\"_approvalHandler\":\"The address of ApprovalHandler\"}},\"setModuleRegistry(address)\":{\"params\":{\"_moduleRegistry\":\"The address of module registry\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"nativeToken\":{\"details\":\"address of native token, if you are trading ETH on Ethereum,      matic on Matic etc you should use this address as token from\"},\"wrappedNativeToken\":{\"details\":\"address of wrapped native token, for Ethereum it's WETH, for Matic is wmatic etc\"}},\"title\":\"Slingshot Trading Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appendString(string,string)\":{\"notice\":\"Concat two strings\"},\"appendUint(string,uint256)\":{\"notice\":\"Concat two strings\"},\"executeTrades(address,address,uint256,(address,bytes)[],uint256,address)\":{\"notice\":\"Executes multi-hop trades to get the best result         It's up to BE to whitelist tokens\"},\"prependNumber(uint256,string)\":{\"notice\":\"Concat number and string\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"In an unlikely scenario of tokens being send to this contract         allow admin to rescue them.\"},\"rescueTokensFromExecutioner(address,address,uint256)\":{\"notice\":\"In an unlikely scenario of tokens being send to this contract         allow admin to rescue them.\"},\"setApprovalHandler(address)\":{\"notice\":\"Sets ApprovalHandler that is used to transfer token from users\"},\"setModuleRegistry(address)\":{\"notice\":\"Sets module registry used to verify modules\"}},\"notice\":\"This contract serves as the entrypoint for executing          a Slingshot transaction on-chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Slingshot.sol\":\"Slingshot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc725/=node_modules/@erc725/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"contracts/Adminable.sol\":{\"keccak256\":\"0xc39d2d4465d5c30cebf86575890e60b289339f78972434544f4170541d81cf1d\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://04a699f6ee455595d8f506d88b2bc8d9a5b2f4b44e9672bd70f0063b12268f07\",\"dweb:/ipfs/QmQvvswM58xa4W5P3uPr8eJXHznE3gZs4qGZ2hHonV8soo\"]},\"contracts/ApprovalHandler.sol\":{\"keccak256\":\"0xb93138626617b16a30ec2770add43606ff3663b2a770d08bbd7063faa345bd5d\",\"license\":\"None\",\"urls\":[\"bzz-raw://4fb87a96759088a75e8538966edac60680a2b303c5446f03cbebacd65231f02c\",\"dweb:/ipfs/QmXXmWHUDq3iaj5aHgdvyJmS7Z6eyygrpJByDJsmvzp6pr\"]},\"contracts/Executioner.sol\":{\"keccak256\":\"0x204fe2456a5bd660e791674ff7a6c1a4e15c52dcb52e2a5f873f9cc447003de0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2f9a62978f7dfe0b6290ae9da4507b3e0672afc1014a0cff2176ff8175f3b12f\",\"dweb:/ipfs/QmdAXQaXJg5Fs59LCVr45n6oTtKc3JL6hoF5dmwakhQHHe\"]},\"contracts/ModuleRegistry.sol\":{\"keccak256\":\"0x3a6d357a598fa3558619bfb5ec9ade863b2e9505ad011d0dee5b064c22dc3285\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4e2732ec729502915e03fe186e4fb2fab65ae2f0ff7226e3549d158f120a2d8a\",\"dweb:/ipfs/QmaR47RekVxph369pMmv9HRuSbrs12EPt5qkSv9fftUpKf\"]},\"contracts/Slingshot.sol\":{\"keccak256\":\"0x9fc85655d3fe17b514f2b9c730e5afd99d31334fb4a217de39bf9e6dc17ff5f1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ae03ec4864b502727f28a59db53de7cf5e2be41169c7dc39d8eee4dba6703f55\",\"dweb:/ipfs/Qmex16qZ9yqZvB6wjoBS5d9MoyCbnU9b9MrASXtdMebZum\"]},\"contracts/interface/IWrappedNATIVE.sol\":{\"keccak256\":\"0x9ad0ad5b0c317778f369dce14af282665164a784f64db86c6324e1fe3d534452\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://55e0c7dda7e676cab0a917be8ad344ea451bfa51e219d36daae9eabf99fd74ec\",\"dweb:/ipfs/QmVFcyPwQjt3Tv3qGT5Eb9beKhfqACZVniT7TwTnT4exfA\"]},\"contracts/interface/SlingshotI.sol\":{\"keccak256\":\"0xaa3008d7f04541d9d7e000163d0bf79498eea69fcf4240fe3ad3053b6aa5454e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c6440dbe6e373f6631bd9af55ec3fe4c3cbc79dd7f34fb381b2c7e764ec49785\",\"dweb:/ipfs/QmVLHFVpHLh5Eh8NmcxJyBzzq5dgX32xfrTpP4uaR1WgS4\"]},\"contracts/lib/ConcatStrings.sol\":{\"keccak256\":\"0xa1973ef53a9e3a26143c24a1bb82d777f9da624a74813b0352a1a978f6c76362\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://dc22a3a1e707b4baa595ea025e5cd052ea3347bd89a55dcc00dadd654dfed963\",\"dweb:/ipfs/QmQypYYf1qZ2KUvpSE3LcnRdK4SUEEiXj5uJce5ZukrZ7c\"]},\"contracts/module/ISlingshotModule.sol\":{\"keccak256\":\"0xc318f19c11ad8064ea42792cdd5452a3a0c27b8f0464959ee932a1aba013b741\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7676d2301e8f529f98d3f464083bb37657141b908ba9787a44d9c3bb25c0d2b5\",\"dweb:/ipfs/QmT8EmeycmMVDdY2L5VkyEYmKba3rpyWAHE5VSua1eguwL\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_wrappedNativeToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldApprovalHandler",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "approvalHandler",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewApprovalHandler",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldRegistry",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newRegistry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewModuleRegistry",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "toToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fromAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Trade",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SLINGSHOT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str1",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "str2",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "appendString",
          "outputs": [
            {
              "internalType": "string",
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str1",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "appendUint",
          "outputs": [
            {
              "internalType": "string",
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "approvalHandler",
          "outputs": [
            {
              "internalType": "contract ApprovalHandler",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "toToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fromAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct SlingshotI.TradeFormat[]",
              "name": "trades",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedCalldata",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "finalAmountMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "depricated",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeTrades"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "executioner",
          "outputs": [
            {
              "internalType": "contract Executioner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "moduleRegistry",
          "outputs": [
            {
              "internalType": "contract ModuleRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "prependNumber",
          "outputs": [
            {
              "internalType": "string",
              "name": "result",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rescueTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rescueTokensFromExecutioner"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_approvalHandler",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalHandler"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_moduleRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setModuleRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrappedNativeToken",
          "outputs": [
            {
              "internalType": "contract IWrappedNATIVE",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "appendString(string,string)": {
            "params": {
              "str1": "String to concat",
              "str2": "String to concat"
            },
            "returns": {
              "result": "Concatenated strings"
            }
          },
          "appendUint(string,uint256)": {
            "params": {
              "i": "Number to append",
              "str1": "String to concat"
            },
            "returns": {
              "result": "Concatenated strings"
            }
          },
          "executeTrades(address,address,uint256,(address,bytes)[],uint256,address)": {
            "params": {
              "depricated": "to be removed",
              "finalAmountMin": "The minimum expected output after all trades have been executed",
              "fromAmount": "The initial amount of fromToken to start trading with",
              "fromToken": "Start token address",
              "toToken": "Target token address",
              "trades": "Array of encoded trades that are atomically executed"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "prependNumber(uint256,string)": {
            "params": {
              "i": "Number to concat",
              "str": "String to concat"
            },
            "returns": {
              "result": "Concatenated string and number"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "rescueTokens(address,address,uint256)": {
            "params": {
              "amount": "The amount of the token to rescue",
              "to": "The address of recipient",
              "token": "The address of the token to rescue"
            }
          },
          "rescueTokensFromExecutioner(address,address,uint256)": {
            "params": {
              "amount": "The amount of the token to rescue",
              "to": "The address of recipient",
              "token": "The address of the token to rescue"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setApprovalHandler(address)": {
            "params": {
              "_approvalHandler": "The address of ApprovalHandler"
            }
          },
          "setModuleRegistry(address)": {
            "params": {
              "_moduleRegistry": "The address of module registry"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "appendString(string,string)": {
            "notice": "Concat two strings"
          },
          "appendUint(string,uint256)": {
            "notice": "Concat two strings"
          },
          "executeTrades(address,address,uint256,(address,bytes)[],uint256,address)": {
            "notice": "Executes multi-hop trades to get the best result         It's up to BE to whitelist tokens"
          },
          "prependNumber(uint256,string)": {
            "notice": "Concat number and string"
          },
          "rescueTokens(address,address,uint256)": {
            "notice": "In an unlikely scenario of tokens being send to this contract         allow admin to rescue them."
          },
          "rescueTokensFromExecutioner(address,address,uint256)": {
            "notice": "In an unlikely scenario of tokens being send to this contract         allow admin to rescue them."
          },
          "setApprovalHandler(address)": {
            "notice": "Sets ApprovalHandler that is used to transfer token from users"
          },
          "setModuleRegistry(address)": {
            "notice": "Sets module registry used to verify modules"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@erc725/=node_modules/@erc725/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uniswap/=node_modules/@uniswap/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solidity-bytes-utils/=node_modules/solidity-bytes-utils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Slingshot.sol": "Slingshot"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Adminable.sol": {
        "keccak256": "0xc39d2d4465d5c30cebf86575890e60b289339f78972434544f4170541d81cf1d",
        "urls": [
          "bzz-raw://04a699f6ee455595d8f506d88b2bc8d9a5b2f4b44e9672bd70f0063b12268f07",
          "dweb:/ipfs/QmQvvswM58xa4W5P3uPr8eJXHznE3gZs4qGZ2hHonV8soo"
        ],
        "license": "AGPLv3"
      },
      "contracts/ApprovalHandler.sol": {
        "keccak256": "0xb93138626617b16a30ec2770add43606ff3663b2a770d08bbd7063faa345bd5d",
        "urls": [
          "bzz-raw://4fb87a96759088a75e8538966edac60680a2b303c5446f03cbebacd65231f02c",
          "dweb:/ipfs/QmXXmWHUDq3iaj5aHgdvyJmS7Z6eyygrpJByDJsmvzp6pr"
        ],
        "license": "None"
      },
      "contracts/Executioner.sol": {
        "keccak256": "0x204fe2456a5bd660e791674ff7a6c1a4e15c52dcb52e2a5f873f9cc447003de0",
        "urls": [
          "bzz-raw://2f9a62978f7dfe0b6290ae9da4507b3e0672afc1014a0cff2176ff8175f3b12f",
          "dweb:/ipfs/QmdAXQaXJg5Fs59LCVr45n6oTtKc3JL6hoF5dmwakhQHHe"
        ],
        "license": "AGPLv3"
      },
      "contracts/ModuleRegistry.sol": {
        "keccak256": "0x3a6d357a598fa3558619bfb5ec9ade863b2e9505ad011d0dee5b064c22dc3285",
        "urls": [
          "bzz-raw://4e2732ec729502915e03fe186e4fb2fab65ae2f0ff7226e3549d158f120a2d8a",
          "dweb:/ipfs/QmaR47RekVxph369pMmv9HRuSbrs12EPt5qkSv9fftUpKf"
        ],
        "license": "AGPLv3"
      },
      "contracts/Slingshot.sol": {
        "keccak256": "0x9fc85655d3fe17b514f2b9c730e5afd99d31334fb4a217de39bf9e6dc17ff5f1",
        "urls": [
          "bzz-raw://ae03ec4864b502727f28a59db53de7cf5e2be41169c7dc39d8eee4dba6703f55",
          "dweb:/ipfs/Qmex16qZ9yqZvB6wjoBS5d9MoyCbnU9b9MrASXtdMebZum"
        ],
        "license": "AGPLv3"
      },
      "contracts/interface/IWrappedNATIVE.sol": {
        "keccak256": "0x9ad0ad5b0c317778f369dce14af282665164a784f64db86c6324e1fe3d534452",
        "urls": [
          "bzz-raw://55e0c7dda7e676cab0a917be8ad344ea451bfa51e219d36daae9eabf99fd74ec",
          "dweb:/ipfs/QmVFcyPwQjt3Tv3qGT5Eb9beKhfqACZVniT7TwTnT4exfA"
        ],
        "license": "AGPLv3"
      },
      "contracts/interface/SlingshotI.sol": {
        "keccak256": "0xaa3008d7f04541d9d7e000163d0bf79498eea69fcf4240fe3ad3053b6aa5454e",
        "urls": [
          "bzz-raw://c6440dbe6e373f6631bd9af55ec3fe4c3cbc79dd7f34fb381b2c7e764ec49785",
          "dweb:/ipfs/QmVLHFVpHLh5Eh8NmcxJyBzzq5dgX32xfrTpP4uaR1WgS4"
        ],
        "license": "AGPLv3"
      },
      "contracts/lib/ConcatStrings.sol": {
        "keccak256": "0xa1973ef53a9e3a26143c24a1bb82d777f9da624a74813b0352a1a978f6c76362",
        "urls": [
          "bzz-raw://dc22a3a1e707b4baa595ea025e5cd052ea3347bd89a55dcc00dadd654dfed963",
          "dweb:/ipfs/QmQypYYf1qZ2KUvpSE3LcnRdK4SUEEiXj5uJce5ZukrZ7c"
        ],
        "license": "AGPLv3"
      },
      "contracts/module/ISlingshotModule.sol": {
        "keccak256": "0xc318f19c11ad8064ea42792cdd5452a3a0c27b8f0464959ee932a1aba013b741",
        "urls": [
          "bzz-raw://7676d2301e8f529f98d3f464083bb37657141b908ba9787a44d9c3bb25c0d2b5",
          "dweb:/ipfs/QmT8EmeycmMVDdY2L5VkyEYmKba3rpyWAHE5VSua1eguwL"
        ],
        "license": "AGPLv3"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Slingshot.sol",
    "id": 1036,
    "exportedSymbols": {
      "AccessControl": [
        1968
      ],
      "Address": [
        3039
      ],
      "Adminable": [
        42
      ],
      "ApprovalHandler": [
        136
      ],
      "ConcatStrings": [
        1131
      ],
      "Context": [
        3061
      ],
      "ERC165": [
        3314
      ],
      "Executioner": [
        330
      ],
      "IAccessControl": [
        2041
      ],
      "IERC165": [
        3326
      ],
      "IERC20": [
        2297
      ],
      "IERC20Permit": [
        2333
      ],
      "ISlingshotModule": [
        1531
      ],
      "IWrappedNATIVE": [
        1050
      ],
      "Math": [
        4192
      ],
      "ModuleRegistry": [
        542
      ],
      "Ownable": [
        2154
      ],
      "ReentrancyGuard": [
        2219
      ],
      "SafeERC20": [
        2709
      ],
      "SignedMath": [
        4297
      ],
      "Slingshot": [
        1035
      ],
      "SlingshotI": [
        1059
      ],
      "Strings": [
        3290
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:8277:4",
    "nodes": [
      {
        "id": 544,
        "nodeType": "PragmaDirective",
        "src": "35:22:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 545,
        "nodeType": "PragmaDirective",
        "src": "58:19:4",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 546,
        "nodeType": "ImportDirective",
        "src": "79:56:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 2298,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 547,
        "nodeType": "ImportDirective",
        "src": "136:65:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 2710,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 548,
        "nodeType": "ImportDirective",
        "src": "202:62:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 2220,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 549,
        "nodeType": "ImportDirective",
        "src": "265:36:4",
        "nodes": [],
        "absolutePath": "contracts/interface/SlingshotI.sol",
        "file": "./interface/SlingshotI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 1060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 550,
        "nodeType": "ImportDirective",
        "src": "302:40:4",
        "nodes": [],
        "absolutePath": "contracts/interface/IWrappedNATIVE.sol",
        "file": "./interface/IWrappedNATIVE.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 1051,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 551,
        "nodeType": "ImportDirective",
        "src": "343:25:4",
        "nodes": [],
        "absolutePath": "contracts/Adminable.sol",
        "file": "./Adminable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 43,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 552,
        "nodeType": "ImportDirective",
        "src": "369:30:4",
        "nodes": [],
        "absolutePath": "contracts/ModuleRegistry.sol",
        "file": "./ModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 543,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 553,
        "nodeType": "ImportDirective",
        "src": "400:31:4",
        "nodes": [],
        "absolutePath": "contracts/ApprovalHandler.sol",
        "file": "./ApprovalHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 137,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 554,
        "nodeType": "ImportDirective",
        "src": "432:27:4",
        "nodes": [],
        "absolutePath": "contracts/Executioner.sol",
        "file": "./Executioner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1036,
        "sourceUnit": 331,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1035,
        "nodeType": "ContractDefinition",
        "src": "1152:7159:4",
        "nodes": [
          {
            "id": 567,
            "nodeType": "UsingForDirective",
            "src": "1234:27:4",
            "nodes": [],
            "libraryName": {
              "id": 564,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2709,
              "src": "1240:9:4"
            },
            "typeName": {
              "id": 566,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 565,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2297,
                "src": "1254:6:4"
              },
              "referencedDeclaration": 2297,
              "src": "1254:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2297",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 571,
            "nodeType": "UsingForDirective",
            "src": "1266:35:4",
            "nodes": [],
            "libraryName": {
              "id": 568,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2709,
              "src": "1272:9:4"
            },
            "typeName": {
              "id": 570,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 569,
                "name": "IWrappedNATIVE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1050,
                "src": "1286:14:4"
              },
              "referencedDeclaration": 1050,
              "src": "1286:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                "typeString": "contract IWrappedNATIVE"
              }
            }
          },
          {
            "id": 574,
            "nodeType": "VariableDeclaration",
            "src": "1455:36:4",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 572,
              "nodeType": "StructuredDocumentation",
              "src": "1307:143:4",
              "text": "@dev address of native token, if you are trading ETH on Ethereum,\n      matic on Matic etc you should use this address as token from"
            },
            "functionSelector": "e1758bd8",
            "mutability": "immutable",
            "name": "nativeToken",
            "nameLocation": "1480:11:4",
            "scope": 1035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 573,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1455:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 578,
            "nodeType": "VariableDeclaration",
            "src": "1591:50:4",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "1497:89:4",
              "text": "@dev address of wrapped native token, for Ethereum it's WETH, for Matic is wmatic etc"
            },
            "functionSelector": "17fcb39b",
            "mutability": "immutable",
            "name": "wrappedNativeToken",
            "nameLocation": "1623:18:4",
            "scope": 1035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
              "typeString": "contract IWrappedNATIVE"
            },
            "typeName": {
              "id": 577,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 576,
                "name": "IWrappedNATIVE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1050,
                "src": "1591:14:4"
              },
              "referencedDeclaration": 1050,
              "src": "1591:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                "typeString": "contract IWrappedNATIVE"
              }
            },
            "visibility": "public"
          },
          {
            "id": 581,
            "nodeType": "VariableDeclaration",
            "src": "1647:40:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "dc6ab02f",
            "mutability": "immutable",
            "name": "executioner",
            "nameLocation": "1676:11:4",
            "scope": 1035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Executioner_$330",
              "typeString": "contract Executioner"
            },
            "typeName": {
              "id": 580,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 579,
                "name": "Executioner",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 330,
                "src": "1647:11:4"
              },
              "referencedDeclaration": 330,
              "src": "1647:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Executioner_$330",
                "typeString": "contract Executioner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 584,
            "nodeType": "VariableDeclaration",
            "src": "1694:36:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "b95459e4",
            "mutability": "mutable",
            "name": "moduleRegistry",
            "nameLocation": "1716:14:4",
            "scope": 1035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ModuleRegistry_$542",
              "typeString": "contract ModuleRegistry"
            },
            "typeName": {
              "id": 583,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 582,
                "name": "ModuleRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 542,
                "src": "1694:14:4"
              },
              "referencedDeclaration": 542,
              "src": "1694:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                "typeString": "contract ModuleRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 587,
            "nodeType": "VariableDeclaration",
            "src": "1736:38:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "2922a751",
            "mutability": "mutable",
            "name": "approvalHandler",
            "nameLocation": "1759:15:4",
            "scope": 1035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ApprovalHandler_$136",
              "typeString": "contract ApprovalHandler"
            },
            "typeName": {
              "id": 586,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 585,
                "name": "ApprovalHandler",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 136,
                "src": "1736:15:4"
              },
              "referencedDeclaration": 136,
              "src": "1736:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                "typeString": "contract ApprovalHandler"
              }
            },
            "visibility": "public"
          },
          {
            "id": 599,
            "nodeType": "EventDefinition",
            "src": "1781:159:4",
            "nodes": [],
            "anonymous": false,
            "name": "Trade",
            "nameLocation": "1787:5:4",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "1810:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1802:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 591,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toToken",
                  "nameLocation": "1837:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1829:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromAmount",
                  "nameLocation": "1862:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1854:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toAmount",
                  "nameLocation": "1890:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1882:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1924:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1908:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:147:4"
            }
          },
          {
            "id": 605,
            "nodeType": "EventDefinition",
            "src": "1945:66:4",
            "nodes": [],
            "anonymous": false,
            "name": "NewModuleRegistry",
            "nameLocation": "1951:17:4",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldRegistry",
                  "nameLocation": "1977:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "1969:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRegistry",
                  "nameLocation": "1998:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "1990:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:42:4"
            }
          },
          {
            "id": 611,
            "nodeType": "EventDefinition",
            "src": "2016:100:4",
            "nodes": [],
            "anonymous": false,
            "name": "NewApprovalHandler",
            "nameLocation": "2022:18:4",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldApprovalHandler",
                  "nameLocation": "2058:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "2050:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2050:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 609,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approvalHandler",
                  "nameLocation": "2094:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "2086:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2040:75:4"
            }
          },
          {
            "id": 644,
            "nodeType": "FunctionDefinition",
            "src": "2122:321:4",
            "nodes": [],
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "2231:212:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 620,
                      "name": "executioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "2241:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Executioner_$330",
                        "typeString": "contract Executioner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 624,
                          "name": "_nativeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 615,
                          "src": "2271:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 625,
                          "name": "_wrappedNativeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "2285:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2255:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Executioner_$330_$",
                          "typeString": "function (address,address) returns (contract Executioner)"
                        },
                        "typeName": {
                          "id": 622,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 621,
                            "name": "Executioner",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 330,
                            "src": "2259:11:4"
                          },
                          "referencedDeclaration": 330,
                          "src": "2259:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Executioner_$330",
                            "typeString": "contract Executioner"
                          }
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2255:50:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Executioner_$330",
                        "typeString": "contract Executioner"
                      }
                    },
                    "src": "2241:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Executioner_$330",
                      "typeString": "contract Executioner"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 630,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "2327:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 629,
                      "name": "_setupAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2315:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2315:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:19:4"
                },
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 633,
                      "name": "nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "2344:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 634,
                      "name": "_nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "2358:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2344:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:26:4"
                },
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 637,
                      "name": "wrappedNativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "2380:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                        "typeString": "contract IWrappedNATIVE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 639,
                          "name": "_wrappedNativeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "2416:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 638,
                        "name": "IWrappedNATIVE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "2401:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWrappedNATIVE_$1050_$",
                          "typeString": "type(contract IWrappedNATIVE)"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2401:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                        "typeString": "contract IWrappedNATIVE"
                      }
                    },
                    "src": "2380:56:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                      "typeString": "contract IWrappedNATIVE"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:56:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2151:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "2143:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "_nativeToken",
                  "nameLocation": "2175:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "2167:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "_wrappedNativeToken",
                  "nameLocation": "2205:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "2197:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2197:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:97:4"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 780,
            "nodeType": "FunctionDefinition",
            "src": "2942:1549:4",
            "nodes": [],
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "3180:1311:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 664,
                    "name": "depricated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 659,
                    "src": "3190:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:10:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 667,
                          "name": "finalAmountMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "3218:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3235:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3218:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536c696e6773686f743a2066696e616c416d6f756e744d696e2063616e6e6f74206265207a65726f",
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3238:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_490165c269854e66275fc1e1fddcc18f48ee80a4f6b7756ce4a5f56452d58f1e",
                          "typeString": "literal_string \"Slingshot: finalAmountMin cannot be zero\""
                        },
                        "value": "Slingshot: finalAmountMin cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_490165c269854e66275fc1e1fddcc18f48ee80a4f6b7756ce4a5f56452d58f1e",
                          "typeString": "literal_string \"Slingshot: finalAmountMin cannot be zero\""
                        }
                      ],
                      "id": 666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3210:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3210:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 674,
                            "name": "trades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "3299:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct SlingshotI.TradeFormat calldata[] calldata"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3299:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3315:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3299:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536c696e6773686f743a207472616465732063616e6e6f7420626520656d707479",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3318:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1f9c7a7d4decbe58324f19c5b0ac5e3db5a868adf2e7f2bbc0444a729474cce",
                          "typeString": "literal_string \"Slingshot: trades cannot be empty\""
                        },
                        "value": "Slingshot: trades cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1f9c7a7d4decbe58324f19c5b0ac5e3db5a868adf2e7f2bbc0444a729474cce",
                          "typeString": "literal_string \"Slingshot: trades cannot be empty\""
                        }
                      ],
                      "id": 673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3291:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:63:4"
                },
                {
                  "body": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "3408:224:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 695,
                                      "name": "trades",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 655,
                                      "src": "3540:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct SlingshotI.TradeFormat calldata[] calldata"
                                      }
                                    },
                                    "id": 697,
                                    "indexExpression": {
                                      "id": 696,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 682,
                                      "src": "3547:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3540:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeFormat_$1058_calldata_ptr",
                                      "typeString": "struct SlingshotI.TradeFormat calldata"
                                    }
                                  },
                                  "id": 698,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "moduleAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1055,
                                  "src": "3540:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 693,
                                  "name": "moduleRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 584,
                                  "src": "3516:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                                    "typeString": "contract ModuleRegistry"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 383,
                                "src": "3516:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3516:48:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536c696e6773686f743a206e6f742061206d6f64756c65",
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3582:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5f2a290db4272ecfcab7e809fb3650e6cc8586beba9b40cdd6295a3279b42943",
                                "typeString": "literal_string \"Slingshot: not a module\""
                              },
                              "value": "Slingshot: not a module"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5f2a290db4272ecfcab7e809fb3650e6cc8586beba9b40cdd6295a3279b42943",
                                "typeString": "literal_string \"Slingshot: not a module\""
                              }
                            ],
                            "id": 692,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3491:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3491:130:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 702,
                        "nodeType": "ExpressionStatement",
                        "src": "3491:130:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 685,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "3384:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 686,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "3388:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SlingshotI.TradeFormat calldata[] calldata"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3388:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3384:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 704,
                  "initializationExpression": {
                    "assignments": [
                      682
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3377:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "3369:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3369:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 684,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3369:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3403:3:4",
                      "subExpression": {
                        "id": 689,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "3403:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 691,
                    "nodeType": "ExpressionStatement",
                    "src": "3403:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3364:268:4"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "3650:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "3642:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3642:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 710,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 708,
                        "name": "toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3684:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 707,
                      "name": "_getTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "3667:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3642:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 712,
                        "name": "fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "3722:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 713,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3051,
                          "src": "3733:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 715,
                        "name": "fromAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "3747:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 711,
                      "name": "_transferFromOrWrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "3702:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3702:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:56:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 721,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "3795:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SlingshotI.TradeFormat calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SlingshotI.TradeFormat calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 718,
                        "name": "executioner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "3769:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Executioner_$330",
                          "typeString": "contract Executioner"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTrades",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 237,
                      "src": "3769:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_TradeFormat_$1058_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct SlingshotI.TradeFormat memory[] memory) external"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3769:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "3769:33:4"
                },
                {
                  "assignments": [
                    725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 725,
                      "mutability": "mutable",
                      "name": "finalBalance",
                      "nameLocation": "3818:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "3813:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 724,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3813:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 726,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3813:17:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 727,
                      "name": "toToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "3844:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 728,
                      "name": "nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "3855:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3844:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 746,
                    "nodeType": "Block",
                    "src": "3959:65:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 740,
                            "name": "finalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "3973:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 742,
                                "name": "toToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "4005:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 741,
                              "name": "_getTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "3988:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3988:25:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3973:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 745,
                        "nodeType": "ExpressionStatement",
                        "src": "3973:40:4"
                      }
                    ]
                  },
                  "id": 747,
                  "nodeType": "IfStatement",
                  "src": "3840:184:4",
                  "trueBody": {
                    "id": 739,
                    "nodeType": "Block",
                    "src": "3868:85:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 730,
                            "name": "finalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "3882:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 734,
                                    "name": "wrappedNativeToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 578,
                                    "src": "3922:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                                      "typeString": "contract IWrappedNATIVE"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                                      "typeString": "contract IWrappedNATIVE"
                                    }
                                  ],
                                  "id": 733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3914:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 732,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3914:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3914:27:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 731,
                              "name": "_getTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "3897:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3897:45:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3882:60:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 738,
                        "nodeType": "ExpressionStatement",
                        "src": "3882:60:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 749,
                      "mutability": "mutable",
                      "name": "finalOutputAmount",
                      "nameLocation": "4038:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "4033:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 748,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4033:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 753,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 750,
                      "name": "finalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "4058:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 751,
                      "name": "initialBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "4073:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4058:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4033:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 755,
                          "name": "finalOutputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 749,
                          "src": "4118:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 756,
                          "name": "finalAmountMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "4139:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4118:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536c696e6773686f743a20726573756c74206973206c6f776572207468616e207265717569726564206d696e",
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4167:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d8e68b1d72c088905b5cc9aa1a82419c8f383f8ea209074adc5858242995d99",
                          "typeString": "literal_string \"Slingshot: result is lower than required min\""
                        },
                        "value": "Slingshot: result is lower than required min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d8e68b1d72c088905b5cc9aa1a82419c8f383f8ea209074adc5858242995d99",
                          "typeString": "literal_string \"Slingshot: result is lower than required min\""
                        }
                      ],
                      "id": 754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4097:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:126:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:126:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 762,
                        "name": "fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "4258:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 763,
                        "name": "toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "4281:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 764,
                        "name": "fromAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "4302:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 765,
                        "name": "finalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "4326:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 766,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3051,
                          "src": "4357:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4357:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 761,
                      "name": "Trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "4239:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4239:140:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "EmitStatement",
                  "src": "4234:145:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 773,
                        "name": "toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "4443:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 774,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3051,
                          "src": "4452:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4452:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 776,
                        "name": "finalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "4466:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "executioner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "4421:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Executioner_$330",
                          "typeString": "contract Executioner"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "4421:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4421:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:63:4"
                }
              ]
            },
            "documentation": {
              "id": 645,
              "nodeType": "StructuredDocumentation",
              "src": "2449:488:4",
              "text": "@notice Executes multi-hop trades to get the best result\n         It's up to BE to whitelist tokens\n @param fromToken Start token address\n @param toToken Target token address\n @param fromAmount The initial amount of fromToken to start trading with\n @param trades Array of encoded trades that are atomically executed\n @param finalAmountMin The minimum expected output after all trades have been executed\n @param depricated to be removed"
            },
            "functionSelector": "06e75722",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 662,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 661,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2184,
                  "src": "3167:12:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3167:12:4"
              }
            ],
            "name": "executeTrades",
            "nameLocation": "2951:13:4",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "2982:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "2974:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "toToken",
                  "nameLocation": "3009:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "3001:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "fromAmount",
                  "nameLocation": "3034:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "3026:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "trades",
                  "nameLocation": "3077:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "3054:29:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SlingshotI.TradeFormat[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 653,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 652,
                        "name": "TradeFormat",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1058,
                        "src": "3054:11:4"
                      },
                      "referencedDeclaration": 1058,
                      "src": "3054:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeFormat_$1058_storage_ptr",
                        "typeString": "struct SlingshotI.TradeFormat"
                      }
                    },
                    "id": 654,
                    "nodeType": "ArrayTypeName",
                    "src": "3054:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeFormat_$1058_storage_$dyn_storage_ptr",
                      "typeString": "struct SlingshotI.TradeFormat[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "finalAmountMin",
                  "nameLocation": "3101:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "3093:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "depricated",
                  "nameLocation": "3133:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "3125:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:185:4"
            },
            "returnParameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:4"
            },
            "scope": 1035,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 803,
            "nodeType": "FunctionDefinition",
            "src": "4639:218:4",
            "nodes": [],
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "4712:145:4",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 791,
                            "name": "approvalHandler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "4754:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                              "typeString": "contract ApprovalHandler"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                              "typeString": "contract ApprovalHandler"
                            }
                          ],
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4746:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 789,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4746:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4746:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 793,
                        "name": "_approvalHandler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "4772:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 788,
                      "name": "NewApprovalHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "4727:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4727:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "EmitStatement",
                  "src": "4722:67:4"
                },
                {
                  "expression": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 796,
                      "name": "approvalHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "4799:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                        "typeString": "contract ApprovalHandler"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 798,
                          "name": "_approvalHandler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "4833:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 797,
                        "name": "ApprovalHandler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4817:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ApprovalHandler_$136_$",
                          "typeString": "type(contract ApprovalHandler)"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4817:33:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                        "typeString": "contract ApprovalHandler"
                      }
                    },
                    "src": "4799:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                      "typeString": "contract ApprovalHandler"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "4799:51:4"
                }
              ]
            },
            "documentation": {
              "id": 781,
              "nodeType": "StructuredDocumentation",
              "src": "4497:137:4",
              "text": "@notice Sets ApprovalHandler that is used to transfer token from users\n @param _approvalHandler The address of ApprovalHandler"
            },
            "functionSelector": "0ff4dc86",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 785,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "4702:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4702:9:4"
              }
            ],
            "name": "setApprovalHandler",
            "nameLocation": "4648:18:4",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "_approvalHandler",
                  "nameLocation": "4675:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "4667:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4667:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4666:26:4"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4712:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 830,
            "nodeType": "FunctionDefinition",
            "src": "4985:253:4",
            "nodes": [],
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "5056:182:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "oldRegistry",
                      "nameLocation": "5074:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "5066:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 811,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5066:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 815,
                        "name": "moduleRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5096:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                          "typeString": "contract ModuleRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                          "typeString": "contract ModuleRegistry"
                        }
                      ],
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5088:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 813,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5088:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5088:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5066:45:4"
                },
                {
                  "expression": {
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 818,
                      "name": "moduleRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "5121:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                        "typeString": "contract ModuleRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 820,
                          "name": "_moduleRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "5153:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 819,
                        "name": "ModuleRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5138:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ModuleRegistry_$542_$",
                          "typeString": "type(contract ModuleRegistry)"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5138:31:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                        "typeString": "contract ModuleRegistry"
                      }
                    },
                    "src": "5121:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ModuleRegistry_$542",
                      "typeString": "contract ModuleRegistry"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "5121:48:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 825,
                        "name": "oldRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "5202:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 826,
                        "name": "_moduleRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "5215:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 824,
                      "name": "NewModuleRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "5184:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5184:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "EmitStatement",
                  "src": "5179:52:4"
                }
              ]
            },
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "4863:117:4",
              "text": "@notice Sets module registry used to verify modules\n @param _moduleRegistry The address of module registry"
            },
            "functionSelector": "43ec1d28",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 809,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 808,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "5046:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5046:9:4"
              }
            ],
            "name": "setModuleRegistry",
            "nameLocation": "4994:17:4",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "_moduleRegistry",
                  "nameLocation": "5020:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "5012:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5012:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5011:25:4"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5056:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 871,
            "nodeType": "FunctionDefinition",
            "src": "5521:358:4",
            "nodes": [],
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "5635:244:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 842,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "5649:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 843,
                      "name": "nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "5658:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5649:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "5810:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 864,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 835,
                              "src": "5851:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "5855:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 861,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 833,
                                  "src": "5831:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 860,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2297,
                                "src": "5824:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5824:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2297",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2366,
                            "src": "5824:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2297_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2297_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5824:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "5824:38:4"
                      }
                    ]
                  },
                  "id": 869,
                  "nodeType": "IfStatement",
                  "src": "5645:228:4",
                  "trueBody": {
                    "id": 859,
                    "nodeType": "Block",
                    "src": "5671:133:4",
                    "statements": [
                      {
                        "assignments": [
                          846,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 846,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5691:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 859,
                            "src": "5686:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 845,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5686:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 853,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5727:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 847,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 835,
                                "src": "5704:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5704:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 849,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 837,
                                "src": "5719:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5704:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5704:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5685:45:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 855,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "5752:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536c696e6773686f743a2045544820726573637565206661696c65642e",
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5761:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1486870461499d81ce8dfbfdf3acb7a3e04d7ec44d69705a7fce81102164a94",
                                "typeString": "literal_string \"Slingshot: ETH rescue failed.\""
                              },
                              "value": "Slingshot: ETH rescue failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1486870461499d81ce8dfbfdf3acb7a3e04d7ec44d69705a7fce81102164a94",
                                "typeString": "literal_string \"Slingshot: ETH rescue failed.\""
                              }
                            ],
                            "id": 854,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5744:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5744:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 858,
                        "nodeType": "ExpressionStatement",
                        "src": "5744:49:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "5244:272:4",
              "text": "@notice In an unlikely scenario of tokens being send to this contract\n         allow admin to rescue them.\n @param token The address of the token to rescue\n @param to The address of recipient\n @param amount The amount of the token to rescue"
            },
            "functionSelector": "cea9d26f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 840,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 839,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "5625:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5625:9:4"
              }
            ],
            "name": "rescueTokens",
            "nameLocation": "5530:12:4",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5560:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "5552:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5552:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5583:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "5575:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5575:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5603:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "5595:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5542:73:4"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5635:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 892,
            "nodeType": "FunctionDefinition",
            "src": "6162:189:4",
            "nodes": [],
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "6291:60:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 886,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "6326:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 887,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "6333:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 888,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "6337:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 883,
                        "name": "executioner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "6301:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Executioner_$330",
                          "typeString": "contract Executioner"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rescueTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 278,
                      "src": "6301:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6301:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "6301:43:4"
                }
              ]
            },
            "documentation": {
              "id": 872,
              "nodeType": "StructuredDocumentation",
              "src": "5885:272:4",
              "text": "@notice In an unlikely scenario of tokens being send to this contract\n         allow admin to rescue them.\n @param token The address of the token to rescue\n @param to The address of recipient\n @param amount The amount of the token to rescue"
            },
            "functionSelector": "97516dba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 880,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "6281:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6281:9:4"
              }
            ],
            "name": "rescueTokensFromExecutioner",
            "nameLocation": "6171:27:4",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6216:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "6208:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6208:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6239:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "6231:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6231:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6259:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "6251:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6251:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6198:73:4"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6291:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 946,
            "nodeType": "FunctionDefinition",
            "src": "6601:605:4",
            "nodes": [],
            "body": {
              "id": 945,
              "nodeType": "Block",
              "src": "6718:488:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 902,
                      "name": "fromToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 895,
                      "src": "6771:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 903,
                      "name": "nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "6784:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6771:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 943,
                    "nodeType": "Block",
                    "src": "7022:178:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 934,
                              "name": "fromToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "7082:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 935,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "7109:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 938,
                                  "name": "executioner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 581,
                                  "src": "7139:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Executioner_$330",
                                    "typeString": "contract Executioner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Executioner_$330",
                                    "typeString": "contract Executioner"
                                  }
                                ],
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7131:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 936,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7131:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7131:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 940,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "7169:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 931,
                              "name": "approvalHandler",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "7036:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ApprovalHandler_$136",
                                "typeString": "contract ApprovalHandler"
                              }
                            },
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 135,
                            "src": "7036:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7036:153:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "7036:153:4"
                      }
                    ]
                  },
                  "id": 944,
                  "nodeType": "IfStatement",
                  "src": "6767:433:4",
                  "trueBody": {
                    "id": 930,
                    "nodeType": "Block",
                    "src": "6797:219:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 906,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6819:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6819:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 908,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "6832:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6819:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536c696e6773686f743a20696e636f7272656374204554482076616c7565",
                              "id": 910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6840:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e1955b1f88444e4e9caa109365edacb95c1158de850f3f7ce327157d5529913a",
                                "typeString": "literal_string \"Slingshot: incorrect ETH value\""
                              },
                              "value": "Slingshot: incorrect ETH value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e1955b1f88444e4e9caa109365edacb95c1158de850f3f7ce327157d5529913a",
                                "typeString": "literal_string \"Slingshot: incorrect ETH value\""
                              }
                            ],
                            "id": 905,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6811:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6811:62:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 912,
                        "nodeType": "ExpressionStatement",
                        "src": "6811:62:4"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 913,
                                "name": "wrappedNativeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "6887:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                                  "typeString": "contract IWrappedNATIVE"
                                }
                              },
                              "id": 915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1044,
                              "src": "6887:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 916,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "6921:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "6887:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6887:43:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "6887:43:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 925,
                                  "name": "executioner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 581,
                                  "src": "6984:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Executioner_$330",
                                    "typeString": "contract Executioner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Executioner_$330",
                                    "typeString": "contract Executioner"
                                  }
                                ],
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6976:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 923,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6976:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6976:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 927,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "6998:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 920,
                              "name": "wrappedNativeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "6944:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                                "typeString": "contract IWrappedNATIVE"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2366,
                            "src": "6944:31:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2297_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2297_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6944:61:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 929,
                        "nodeType": "ExpressionStatement",
                        "src": "6944:61:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 893,
              "nodeType": "StructuredDocumentation",
              "src": "6357:239:4",
              "text": "@notice Transfer tokens from sender to this contract or wraps ETH\n @param fromToken The address of the token\n @param from The address of sender that provides token\n @param amount The amount of the token to transfer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFromOrWrap",
            "nameLocation": "6610:19:4",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "6647:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "6639:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6674:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "6666:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6696:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "6688:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6688:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6629:79:4"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6718:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 977,
            "nodeType": "FunctionDefinition",
            "src": "7359:258:4",
            "nodes": [],
            "body": {
              "id": 976,
              "nodeType": "Block",
              "src": "7432:185:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 954,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "7446:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 955,
                      "name": "nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "7455:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7446:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 974,
                    "nodeType": "Block",
                    "src": "7534:77:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 970,
                                  "name": "executioner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 581,
                                  "src": "7587:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Executioner_$330",
                                    "typeString": "contract Executioner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Executioner_$330",
                                    "typeString": "contract Executioner"
                                  }
                                ],
                                "id": 969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7579:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 968,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7579:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7579:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 965,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 949,
                                  "src": "7562:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 964,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2297,
                                "src": "7555:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7555:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2297",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2254,
                            "src": "7555:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7555:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 953,
                        "id": 973,
                        "nodeType": "Return",
                        "src": "7548:52:4"
                      }
                    ]
                  },
                  "id": 975,
                  "nodeType": "IfStatement",
                  "src": "7442:169:4",
                  "trueBody": {
                    "id": 963,
                    "nodeType": "Block",
                    "src": "7468:60:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 959,
                                "name": "executioner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 581,
                                "src": "7497:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Executioner_$330",
                                  "typeString": "contract Executioner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Executioner_$330",
                                  "typeString": "contract Executioner"
                                }
                              ],
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7489:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 957,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7489:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7489:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7489:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 953,
                        "id": 962,
                        "nodeType": "Return",
                        "src": "7482:35:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 947,
              "nodeType": "StructuredDocumentation",
              "src": "7212:142:4",
              "text": "@notice Returns balance of the token\n @param token The address of the token\n @return balance of the token (ERC20 and native)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenBalance",
            "nameLocation": "7368:16:4",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7393:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 977,
                  "src": "7385:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7385:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7384:15:4"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 977,
                  "src": "7423:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7423:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7422:9:4"
            },
            "scope": 1035,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1030,
            "nodeType": "FunctionDefinition",
            "src": "7857:417:4",
            "nodes": [],
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "7929:345:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 990,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "7961:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 991,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "7968:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 992,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "7972:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 987,
                        "name": "executioner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "7939:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Executioner_$330",
                          "typeString": "contract Executioner"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "7939:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7939:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "7939:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 995,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "7993:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 996,
                      "name": "nativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "8002:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7993:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1027,
                    "nodeType": "Block",
                    "src": "8205:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1023,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "8246:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1024,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "8250:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1020,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 980,
                                  "src": "8226:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1019,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2297,
                                "src": "8219:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2297_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8219:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2297",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2366,
                            "src": "8219:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2297_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2297_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8219:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1026,
                        "nodeType": "ExpressionStatement",
                        "src": "8219:38:4"
                      }
                    ]
                  },
                  "id": 1028,
                  "nodeType": "IfStatement",
                  "src": "7989:279:4",
                  "trueBody": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "8015:184:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1001,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "8057:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 998,
                              "name": "wrappedNativeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "8029:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWrappedNATIVE_$1050",
                                "typeString": "contract IWrappedNATIVE"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1049,
                            "src": "8029:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8029:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1003,
                        "nodeType": "ExpressionStatement",
                        "src": "8029:35:4"
                      },
                      {
                        "assignments": [
                          1005,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1005,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "8084:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1018,
                            "src": "8079:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1004,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8079:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1012,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8120:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1006,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 982,
                                "src": "8097:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "8097:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1008,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 984,
                                "src": "8112:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "8097:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8097:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8078:45:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1014,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "8145:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536c696e6773686f743a20455448205472616e73666572206661696c65642e",
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8154:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e1230a64f74157192d97cb7232267a149b3ad2e8eb25ae793ad75c4167926b6",
                                "typeString": "literal_string \"Slingshot: ETH Transfer failed.\""
                              },
                              "value": "Slingshot: ETH Transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e1230a64f74157192d97cb7232267a149b3ad2e8eb25ae793ad75c4167926b6",
                                "typeString": "literal_string \"Slingshot: ETH Transfer failed.\""
                              }
                            ],
                            "id": 1013,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8137:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8137:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "8137:51:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 978,
              "nodeType": "StructuredDocumentation",
              "src": "7623:229:4",
              "text": "@notice Sends token funds. For native token, it unwraps wrappedNativeToken\n @param token The address of the token to send\n @param to The address of recipient\n @param amount The amount of the token to send"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendFunds",
            "nameLocation": "7866:10:4",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7885:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "7877:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7877:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7900:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "7892:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7892:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7912:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "7904:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7904:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7876:43:4"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7929:0:4"
            },
            "scope": 1035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1034,
            "nodeType": "FunctionDefinition",
            "src": "8280:29:4",
            "nodes": [],
            "body": {
              "id": 1033,
              "nodeType": "Block",
              "src": "8307:2:4",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8287:2:4"
            },
            "returnParameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8307:0:4"
            },
            "scope": 1035,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 556,
              "name": "SlingshotI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1059,
              "src": "1174:10:4"
            },
            "id": 557,
            "nodeType": "InheritanceSpecifier",
            "src": "1174:10:4"
          },
          {
            "baseName": {
              "id": 558,
              "name": "Adminable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42,
              "src": "1186:9:4"
            },
            "id": 559,
            "nodeType": "InheritanceSpecifier",
            "src": "1186:9:4"
          },
          {
            "baseName": {
              "id": 560,
              "name": "ConcatStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1131,
              "src": "1197:13:4"
            },
            "id": 561,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:4"
          },
          {
            "baseName": {
              "id": 562,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2219,
              "src": "1212:15:4"
            },
            "id": 563,
            "nodeType": "InheritanceSpecifier",
            "src": "1212:15:4"
          }
        ],
        "contractDependencies": [
          330
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 555,
          "nodeType": "StructuredDocumentation",
          "src": "461:691:4",
          "text": "@title   Slingshot Trading Contract\n @author  DEXAG, Inc.\n @notice  This contract serves as the entrypoint for executing\n          a Slingshot transaction on-chain.\n @dev     The specific logic for each DEX/AMM is defined within its\n          own corresponding module that is stored in the module registry.\n          Slingshot.sol references these modules to appropriately execute a trade.\n          Slingshot.sol also performs some safety checks to account for slippage\n          and security. Slingshot.sol depends on the Slingshot backend to provide\n          the details of how a given transaction will be executed within a\n          particular market."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1035,
          2219,
          1131,
          42,
          1968,
          3314,
          3326,
          2041,
          3061,
          1059
        ],
        "name": "Slingshot",
        "nameLocation": "1161:9:4",
        "scope": 1036,
        "usedErrors": []
      }
    ],
    "license": "AGPLv3"
  },
  "id": 4
}